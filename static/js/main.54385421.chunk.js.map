{"version":3,"sources":["components/Card.js","redux/actions/index.js","redux/actions/cardActions.js","components/AddCardButton.js","components/List.js","components/AddListButton.js","redux/actions/listActions.js","components/board/Board.js","components/App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/listReducer.js","redux/reducers/index.js","index.js","redux/configureStore.js"],"names":["styles","card","margin","boxSizing","borderRadius","height","wordWrap","cardBody","padding","fontSize","Card","id","text","index","CardContainer","styled","div","draggableId","String","provided","className","ref","innerRef","draggableProps","dragHandleProps","style","CONSTANTS","ADD_CARD","ADD_LIST","DRAGGED","addCard","listId","type","payload","AddCardButton","useState","formOpen","setFormOpen","setText","dispatch","useDispatch","createCard","console","log","handleInputChange","ev","target","value","toggleForm","prev","container","minRows","autoFocus","placeholder","onBlur","onChange","textArea","actionContainer","addCardBtn","onMouseDown","onClick","icon","addAnother","color","cursor","display","alignItems","marginTop","backgroundColor","fontWeight","marginRight","resize","width","border","minWidth","maxWidth","title","List","cards","droppableId","droppableProps","map","key","AddListButton","createList","form","colort","paddingTop","Board","lists","useSelector","state","ListContainer","onDragEnd","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","list","App","Boolean","window","location","hostname","match","listID","cardId","listReducer","initialState","action","newList","newCard","newState","find","splice","startList","endList","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54385421.chunk.js","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nconst Card = ({ id, text, index }) => {\n  const CardContainer = styled.div`\n    margin: 10px;\n    boxsizing: border-box;\n    border-radius: 3px;\n    height: auto;\n    word-wrap: break-word;\n  `;\n\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <CardContainer>\n          <div\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <div className='card-body' style={styles.cardBody}>\n              {text}\n            </div>\n          </div>\n        </CardContainer>\n      )}\n    </Draggable>\n  );\n};\nconst styles = {\n  card: {\n    margin: '20px',\n    boxSizing: 'border-box',\n    borderRadius: '3px',\n    height: 'auto',\n    wordWrap: 'break-word'\n  },\n  cardBody: {\n    padding: '10px',\n    fontSize: '14px'\n  }\n};\n\nexport default Card;\n","export * from './listActions'\nexport * from './cardActions'\n\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  ADD_LIST: 'ADD_LIST',\n  DRAGGED: 'DRAGGED'\n\n\n};\n","import { CONSTANTS } from '.';\n\nconst addCard = (listId, text) => {\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listId }\n  };\n};\n\nexport default addCard;\n","import React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from 'react-redux';\nimport addCard from '../redux/actions/cardActions';\n\nexport default function AddCardButton({ listId }) {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createCard = () => {\n    console.log(text);\n    setText('');\n    dispatch(addCard(listId, text));\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n\n  };\n  const formRender = () => (\n    <>\n      <TextareaAutosize\n        minRows={3}\n        autoFocus\n        placeholder='Enter a title for this card...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <div style={styles.actionContainer}>\n        <button\n          className='btn'\n          style={styles.actionContainer.addCardBtn}\n          onMouseDown={createCard}\n        >\n          Add Card\n        </button>\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i\n            className='fas fa-times fa-lg'\n            style={styles.actionContainer.icon}\n          ></i>\n        </span>\n      </div>\n    </>\n  );\n\n  const buttonRender = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another card\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? formRender() : buttonRender()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: '1em',\n    color: '#5e6c84'\n  },\n  addAnother: {\n    margin: '0.5em 1em',\n    cursor: 'pointer'\n  },\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '0.5em',\n    addCardBtn: {\n      color: 'white',\n      backgroundColor: '#5aac44',\n      fontWeight: 'bold',\n      marginRight: '1em'\n    },\n    icon: {\n      color: '#6b778c',\n      fontSize: '1.5em',\n      cursor: 'pointer'\n    }\n  },\n\n  textArea: {\n    resize: 'none',\n    width: '100%',\n    border: 'none'\n  }\n};\n","import React from 'react';\nimport Card from './Card';\nimport AddCardButton from './AddCardButton';\n\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst List = ({ id, title, cards }) => {\n  return (\n    \n    <Droppable droppableId={String(id)}>\n      {provided => (\n        <div\n          style={styles.container}\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          <h2 style={styles.title}>{title}</h2>\n          {cards.map((card, index) => (\n            <Card key={card.id} index={index} text={card.text} id={card.id} />\n          ))}\n          {provided.placeholder}\n          <AddCardButton listId={id} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#ebecf0',\n    marginRight: '1em',\n    boxSizing: 'border-box',\n    borderRadius: '3px',\n    minWidth: '272px',\n    maxWidth: '272px'\n\n\n  },\n  title: {\n    padding: '10px',\n    fontSize: '1.2em'\n  }\n};\nexport default List;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList } from '../redux/actions/listActions';\n\n// import TextareaAutosize from 'react-textarea-autosize';\n\nexport default function AddListButton() {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createList = () => {\n    console.log(text);\n    dispatch(addList(text));\n    setText('');\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n  const formRender = () => (\n    <div style={styles.form}>\n      <input\n        autoFocus\n        placeholder='Enter a list title...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <div style={styles.actionContainer}>\n        <button\n          className='btn'\n          style={styles.actionContainer.addCardBtn}\n          onMouseDown={createList}\n        >\n          Add List\n        </button>\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i\n            className='fas fa-times fa-lg'\n            style={styles.actionContainer.icon}\n          ></i>\n        </span>\n      </div>\n    </div>\n  );\n\n  const buttonRender = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another list\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? formRender() : buttonRender()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    minWidth: '272px',\n    color: '#fff'\n  },\n  addAnother: {\n    backgroundColor: 'hsla(0,0%,100%,.24)',\n    padding: '10px',\n    fontSize: '1.1em',\n    colort: 'white',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    borderRadius: '3px'\n  },\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '0.5em',\n    addCardBtn: {\n      color: 'white',\n      backgroundColor: '#5aac44',\n      fontWeight: 'bold',\n      marginRight: '1em'\n    },\n    icon: {\n      color: '#42526e',\n      fontSize: '1.5em',\n      cursor: 'pointer'\n    }\n  },\n  form: {\n    backgroundColor: '#ebecf0',\n    padding: '0.5em 0.4em',\n    boxSizing: 'border-box',\n    borderRadius: '3px'\n  },\n  textArea: {\n    padding: '8px 12px',\n    resize: 'none',\n    width: '100%',\n    border: 'none'\n  }\n};\n","import { CONSTANTS } from '.';\n\nexport const addList = title => {\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: title\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId\n) => {\n  return {\n    type: CONSTANTS.DRAGGED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId\n    }\n  };\n};\n","import React from 'react';\nimport List from '../List';\n// import './Board.scss';\nimport { useSelector } from 'react-redux';\nimport AddListButton from '../AddListButton';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport { sort } from '../../redux/actions/listActions';\nimport styled from 'styled-components';\n\nconst Board = () => {\n  const lists = useSelector(state => state.lists);\n  const dispatch = useDispatch();\n\n  const ListContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    margin-top: 2em;\n  `;\n\n  const onDragEnd = ({ destination, source, draggableId }) => {\n    if (destination) {\n      dispatch(\n        sort(\n          source.droppableId,\n          destination.droppableId,\n          source.index,\n          destination.index,\n          draggableId\n        )\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <ListContainer>\n        {lists.map(list => (\n          <List\n            key={list.id}\n            id={list.id}\n            title={list.title}\n            cards={list.cards}\n          />\n        ))}\n        <AddListButton />\n      </ListContainer>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport './App.scss';\nimport Board from './board/Board';\n\nfunction App({ lists }) {\n  return (\n    <div className='container-fluid mt-4'>\n      <h1 style={{ color: 'white' }}>Hello World</h1>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default [\n  {\n    id: `list-${0}`,\n    title: 'To Do',\n    cards: [\n      {\n        id: 0,\n        text: 'Finish clone trello project!'\n      },\n      {\n        id: 1,\n        text: 'Finish clone trello project! ASAP'\n      }\n    ]\n  },\n\n  {\n    id: `list-${1}`,\n    title: 'Doing',\n    cards: [\n      {\n        id: 2,\n        text: 'Crushing it!'\n      }\n    ]\n  },\n  {\n    id: `list-${2}`,\n    title: 'Done',\n    cards: [\n      {\n        id: 3,\n        text: 'Be a legend'\n      },\n      {\n        id: 4,\n        text: '100% humble'\n      }\n    ]\n  }\n];\n","import { CONSTANTS } from '../actions';\nimport initialState from './initialState';\n\nlet listID = 2;\nlet cardId = 4;\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      console.log('REducer', action);\n      const newList = {\n        title: action.payload,\n        cards: [],\n        id: `list-${++listID}`\n      };\n      return [...state, newList];\n\n    case CONSTANTS.ADD_CARD: {\n      console.log('CARD REDUCER ', action);\n      const newCard = {\n        id: ++cardId,\n        text: action.payload.text\n      };\n      console.log('state', state);\n      const newState = state.map(list => {\n        if (list.id === action.payload.listId) {\n          return {\n            ...list,\n            cards: [...list.cards, newCard]\n          };\n        } else {\n          return list;\n        }\n      });\n      // console.log('NEW STATE', newState);\n      return newState;\n    }\n    case CONSTANTS.DRAGGED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd\n      } = action.payload;\n\n      //same container\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      } else {\n        const startList = state.find(list => droppableIdStart === list.id);\n        const endList = state.find(list => droppableIdEnd === list.id);\n        \n        const card = startList.cards.splice(droppableIndexStart, 1);\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      const newState = [...state];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { combineReducers } from \"redux\";\nimport listReducer from \"./listReducer\"\n\n  \nconst rootReducer = combineReducers({\n    lists: listReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\"; //applyMiddleware, compose\nimport rootReducer from \"./reducers\";\n// import reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n// import thunk from \"redux-thunk\";\n\nexport default function configureStore(initialState) {\n    // const composeEnhancers =\n    //     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n\n    return createStore(\n        rootReducer,\n        initialState,\n        // composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n    );\n}\n"],"sourceRoot":""}
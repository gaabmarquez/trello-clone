{"version":3,"sources":["components/AddButton.js","components/CardForm.js","redux/actions/index.js","components/Card.js","redux/actions/cardActions.js","components/AddCard.js","components/ListForm.js","components/List.js","redux/actions/listActions.js","components/AddList.js","components/Board.js","components/App.js","redux/actions/searchActions.js","serviceWorker.js","redux/reducers/listReducer.js","redux/reducers/cardReducer.js","redux/reducers/archiveReducer.js","redux/reducers/searchReducer.js","redux/reducers/index.js","index.js","redux/configureStore.js"],"names":["AddBtn","styled","button","AddButton","disabled","btnText","onClick","className","onMouseDown","ActionContainer","div","CardForm","text","toggleForm","handleInputChange","buttonText","onSubmit","minRows","autoFocus","placeholder","onBlur","value","onChange","style","styles","textArea","length","icon","color","fontSize","cursor","resize","width","border","CONSTANTS","ADD_CARD","EDIT_CARD","ARCHIVE_CARD","ADD_LIST","EDIT_LIST","ARCHIVE_LIST","DRAGGED","FILTER_CARDS","CardContainer","EditButton","ArchiveButton","container","margin","card","borderRadius","height","wordWrap","cardBody","padding","Card","id","index","listId","useState","isEditing","setIsEditing","cardText","setText","dispatch","useDispatch","search","useSelector","state","saveCard","e","preventDefault","newText","type","payload","editCard","ev","target","toggleEdit","archive","listID","list","toUpperCase","includes","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","OverlayTrigger","placement","overlay","Tooltip","AddCard","formOpen","setFormOpen","createCard","uuid","addCard","prev","addAnother","FormContainer","FormInput","input","actionContainer","display","alignItems","paddingTop","ListForm","ListContainer","backgroundColor","marginRight","minWidth","maxWidth","position","title","List","cards","listTitle","setTitle","saveChanges","editList","console","log","archiveList","droppableId","droppableProps","map","key","AddListContainer","AddAnotherList","p","AddList","createList","addList","Board","lists","onDragEnd","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","direction","Object","keys","listCards","cardID","navContainer","justifyContent","background","SearchButton","Button","App","archived","searchText","setSearchText","Navbar","variant","Nav","FormControl","onKeyDown","keyCode","fontWeight","Boolean","window","location","hostname","match","initialState","listReducer","action","newList","newState","archivedList","filter","find","splice","startList","endList","cardReducer","newCard","archiveReducer","searchReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa1f5be2.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst AddBtn = styled.button`\n  color: white;\n  background-color: #5aac44;\n  font-weight: bold;\n  margin-right: 1em;\n  &:hover {\n    color: white;\n  }\n`;\nexport default function AddButton({ disabled, btnText, onClick }) {\n  return (\n    <AddBtn className='btn' disabled={disabled} onMouseDown={onClick}>\n      {btnText}\n    </AddBtn>\n  );\n}\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport AddButton from './AddButton';\nimport styled from 'styled-components';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 0.5em;\n`;\nexport default function CardForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <>\n      <TextareaAutosize\n        minRows={3}\n        autoFocus\n        placeholder='Enter a title for this card...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <ActionContainer>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </ActionContainer>\n    </>\n  );\n}\n\nconst styles = {\n  icon: {\n    color: '#6b778c',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  },\n  textArea: {\n    resize: 'none',\n    width: '100%',\n    border: 'none'\n  }\n};\n","export * from './listActions';\nexport * from './cardActions';\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  EDIT_CARD: 'EDIT_CARD',\n  ARCHIVE_CARD: 'ARCHIVE_CARD',\n  ADD_LIST: 'ADD_LIST',\n  EDIT_LIST: 'EDIT_LIST',\n  ARCHIVE_LIST: 'ARCHIVE_LIST',\n  DRAGGED: 'DRAGGED',\n  FILTER_CARDS: 'FILTER_CARDS'\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport CardForm from './CardForm';\n\nimport { editCard } from '../redux/actions';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { archiveCard } from '../redux/actions/cardActions';\n\nconst CardContainer = styled.div`\n  margin-bottom: 0.5rem !important;\n  margin-left: 0.5rem !important;\n  margin-right: 0.5rem !important;\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Card = ({ id, text, index, listId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n  const dispatch = useDispatch();\n  const search = useSelector(state => state.search);\n\n  const saveCard = e => {\n    e.preventDefault();\n    setText('');\n    dispatch(editCard(id, cardText));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    dispatch(archiveCard({ id, text, list: listId }));\n    setIsEditing(false);\n  };\n\n  const renderCard = () => {\n    // console.log(text, search, text.includes(search));\n    return !search || text.toUpperCase().includes(search.toUpperCase()) ? (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Edit Card</Tooltip>}\n            >\n              <EditButton onClick={toggleEdit}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-pen'></i>\n                </span>\n              </EditButton>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Archive Card</Tooltip>}\n            >\n              <ArchiveButton onClick={archive}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-archive'></i>\n                </span>\n              </ArchiveButton>\n            </OverlayTrigger>\n\n            <div className='card-body' style={styles.cardBody}>\n              {text}\n            </div>\n          </CardContainer>\n        )}\n      </Draggable>\n    ) : (\n      <> </>\n    );\n  };\n  const renderEditForm = () => {\n    return (\n      <div style={styles.container}>\n        <CardForm\n          text={cardText}\n          toggleForm={toggleEdit}\n          buttonText='Save'\n          handleInputChange={handleInputChange}\n          onSubmit={saveCard}\n        />\n      </div>\n    );\n  };\n  return isEditing ? renderEditForm() : renderCard();\n};\nconst styles = {\n  container: {\n    margin: '0.5rem',\n    color: '#5e6c84'\n  },\n  card: {\n    margin: '20px',\n    borderRadius: '3px',\n    height: 'auto',\n    wordWrap: 'break-word'\n  },\n  cardBody: {\n    padding: '14px'\n  }\n};\n\nexport default Card;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, newText }\n  };\n};\n\nexport const archiveCard = (card, listID) => {\n  return {\n    type: CONSTANTS.ARCHIVE_CARD,\n    payload: { card, listID }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCard } from '../redux/actions';\nimport CardForm from './CardForm';\n\nexport default function AddCard({ listId }) {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createCard = () => {\n    setText('');\n    dispatch(addCard(listId, text));\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n  const renderForm = () => (\n    <CardForm\n      text={text}\n      buttonText='Add Card'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createCard}\n    />\n  );\n\n  const renderButton = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another card\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? renderForm() : renderButton()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: '1em',\n    color: '#5e6c84'\n  },\n  addAnother: {\n    margin: '0.5em 1em',\n    cursor: 'pointer'\n  }\n};\n","import React from 'react';\nimport AddButton from '../components/AddButton';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: #ebecf0;\n  padding: 0.5em 0.4em;\n  border-radius: 3px;\n`;\n\nconst FormInput = styled.input`\n  padding: 8px 12px;\n  resize: none;\n  width: 100%;\n  border: none;\n`;\n\nconst styles = {\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '0.5em'\n  },\n  icon: {\n    color: '#42526e',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  }\n};\n\nexport default function ListForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <FormContainer>\n      <FormInput\n        autoFocus\n        placeholder='Enter a list title...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n      />\n      <div style={styles.actionContainer}>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </div>\n    </FormContainer>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListForm from './ListForm';\nimport { editList, archiveList } from '../redux/actions/listActions';\n\nconst ListContainer = styled.div`\n  background-color: #ebecf0;\n  margin-right: 1em;\n  border-radius: 3px;\n  min-width: 272px;\n  max-width: 272px;\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  // display: none;\n  right: 45px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  // display: none;\n  right: 15px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst List = ({ id, title, cards = [], index }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setTitle] = useState(title);\n\n  const dispatch = useDispatch();\n\n  const saveChanges = e => {\n    e.preventDefault();\n    dispatch(editList(id, listTitle));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setTitle(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    console.log('LIST ID', id, cards);\n\n    dispatch(archiveList({id, title}, cards));\n    setIsEditing(false);\n  };\n\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <ListContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {isEditing ? (\n            <ListForm\n              text={listTitle}\n              buttonText='Save'\n              toggleForm={toggleEdit}\n              handleInputChange={handleInputChange}\n              onSubmit={saveChanges}\n            />\n          ) : (\n            <div style={{ position: 'relative' }}>\n              <h2 style={styles.title}>{title}</h2>\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Edit List title</Tooltip>}\n              >\n                <EditButton onClick={toggleEdit}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-pen'></i>\n                  </span>\n                </EditButton>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Archive List</Tooltip>}\n              >\n                <ArchiveButton onClick={archive}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-archive'></i>\n                  </span>\n                </ArchiveButton>\n              </OverlayTrigger>\n            </div>\n          )}\n          <Droppable droppableId={String(id)}>\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {cards.map((card, index) => (\n                  <Card\n                    key={card.id}\n                    index={index}\n                    text={card.text}\n                    id={card.id}\n                    listId={id}\n                  />\n                ))}\n                {provided.placeholder}\n                <AddCard listId={id} />\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#ebecf0',\n    marginRight: '1em',\n    borderRadius: '3px',\n    minWidth: '272px',\n    maxWidth: '272px'\n  },\n  actionContainer: {\n    position: 'relative'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '1.2em'\n  }\n};\nexport default List;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addList = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const editList = (id, title) => {\n  return {\n    type: CONSTANTS.EDIT_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const archiveList = (list, cards) => {\n  return {\n    type: CONSTANTS.ARCHIVE_LIST,\n    payload: { list, cards }\n  };\n};\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAGGED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList } from '../redux/actions/listActions';\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\n\nconst AddListContainer = styled.div`\n  min-width: 272px;\n  color: #fff;\n`;\n\nconst AddAnotherList = styled.p`\n  background-color: hsla(0, 0%, 100%, 0.24);\n  padding: 10px;\n  font-size: 1.1em;\n  color: white;\n  cursor: pointer;\n  border-radius: 3px;\n`;\n\nconst AddList = () => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createList = () => {\n    if (text.length > 0) {\n      dispatch(addList(text));\n      setText('');\n    }\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n\n  const renderForm = () => (\n    <ListForm\n      text={text}\n      buttonText='Add List'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createList}\n    />\n  );\n\n  const renderButton = () => (\n    <AddAnotherList\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another list\n    </AddAnotherList>\n  );\n  return (\n    <AddListContainer>\n      {formOpen ? renderForm() : renderButton()}\n    </AddListContainer>\n  );\n};\n\nexport default AddList;\n","import React from 'react';\nimport List from './List';\nimport { useSelector } from 'react-redux';\nimport AddList from './AddList';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport { sort } from '../redux/actions/listActions';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: 2em;\n`;\n\nconst Board = () => {\n  const lists = useSelector(state => state.lists);\n  const cards = useSelector(state => state.cards);\n\n  const dispatch = useDispatch();\n\n  const onDragEnd = ({ destination, source, draggableId, type }) => {\n    if (destination) {\n      dispatch(\n        sort(\n          source.droppableId,\n          destination.droppableId,\n          source.index,\n          destination.index,\n          draggableId,\n          type\n        )\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='all-lists' direction='horizontal' type='list'>\n        {provided => (\n          <ListContainer ref={provided.innerRef} {...provided.droppableProps}>\n            {Object.keys(lists).map((key, index) => {\n              const list = lists[key];\n              const listCards =\n                list.cards.length > 0\n                  ? list.cards.map(cardID => cards[cardID])\n                  : [];\n              return (\n                <List\n                  key={list.id}\n                  id={list.id}\n                  title={list.title}\n                  cards={listCards}\n                  index={index}\n                />\n              );\n            })}\n            {provided.placeholder}\n\n            <AddList />\n          </ListContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Board from './Board';\nimport { useSelector } from 'react-redux';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { filterCards } from '../redux/actions/searchActions';\n\nconst style = {\n  navContainer: {\n    display: 'grid',\n    justifyContent: 'space-around',\n    background: 'rgba(0,0,0,.15)'\n  }\n};\n\nconst SearchButton = styled(Button)`\n  // color: red;\n  font-weight: bold;\n  background: rgba(0, 0, 0, 0.2);\n`;\nfunction App() {\n  const archived = useSelector(state => state.archived);\n  const [searchText, setSearchText] = useState('');\n  const dispatch = useDispatch();\n\n  const handleKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      search();\n    }\n  };\n  const handleInputChange = ev => {\n    setSearchText(ev.target.value);\n  };\n  const search = ev => {\n    dispatch(filterCards(searchText));\n    // console.log('DISPATCHED,', ev.target.value)\n  };\n  return (\n    <>\n      <Navbar variant='dark' style={style.navContainer}>\n        <Nav className='mr-auto'>\n          {/* <Form inline> */}\n          <FormControl\n            type='text'\n            value={searchText}\n            onKeyDown={handleKeyDown}\n            onChange={handleInputChange}\n            placeholder='Search text inside cards'\n            className='mr-sm-2'\n          />\n          <SearchButton onClick={search}> Search</SearchButton>\n          {/* </Form> */}\n        </Nav>\n      </Navbar>\n      <div className='container-fluid mt-4'>\n        <h1 style={{ color: 'white' }}>Trello Clone </h1>\n        <p style={{ color: 'white', fontWeight: 'bold' }}>\n          Archived Cards: {archived.cards.length}\n          <br />\n          Archived Lists: {archived.lists.length}\n        </p>\n\n        <Board />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { CONSTANTS } from '.';\n\nexport const filterCards = text => {\n  return {\n    type: CONSTANTS.FILTER_CARDS,\n    payload: { text }\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CONSTANTS } from '../actions';\n\nconst initialState = [\n  { id: 'list-0', cards: ['card-0','card-3'], title: 'To Do' },\n  { id: 'list-1', cards: ['card-1','card-4'], title: 'Doing' },\n  { id: 'list-2', cards: ['card-2','card-5'], title: 'Done' }\n];\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n\n      const newList = {\n        title: title,\n        cards: [],\n        id: `list-${id}`\n      };\n      return [...state, newList];\n    }\n\n    case CONSTANTS.EDIT_LIST: {\n      const { title, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === id) {\n          return {\n            ...list,\n            title\n          };\n        } else {\n          return list;\n        }\n      });\n      console.log(newState);\n      return newState;\n    }\n\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list: archivedList } = action.payload;\n\n      const newState = state.filter(list => list.id !== archivedList.id);\n      console.log('NEW STATE', archivedList.id, newState);\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      console.log(action.type, 'LIST REDUCER');\n      const { listID, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === listID) {\n          return {\n            ...list,\n            cards: [...list.cards, `card-${id}`]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newState = [...state];\n      const list = newState.find(list => list.id === card.list);\n      list.cards = list.cards.filter(cardID => cardID !== card.id);\n      // console.log('LISTS>>>>>>', newState);\n\n      return newState;\n    }\n\n    case CONSTANTS.DRAGGED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type\n      } = action.payload;\n\n      const newState = [...state];\n      if (type === 'list') {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n      //same container\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      } else {\n        const startList = state.find(list => droppableIdStart === list.id);\n        const endList = state.find(list => droppableIdEnd === list.id);\n\n        const card = startList.cards.splice(droppableIndexStart, 1);\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  'card-0': {\n    text: 'To do task',\n    id: `card-0`,\n    list: 'list-0'\n  },\n  'card-1': {\n    text: 'Doing task',\n    id: `card-1`,\n    list: 'list-1'\n  },\n  'card-2': {\n    text: 'Done task',\n    id: `card-2`,\n    list: 'list-2'\n  },\n  'card-3': {\n    text: 'TO FILTER: To do task',\n    id: `card-3`,\n    list: 'list-0'\n  },\n  'card-4': {\n    text: 'TO FILTER: Doing task',\n    id: `card-4`,\n    list: 'list-1'\n  },\n  'card-5': {\n    text: 'TO FILTER: Done task',\n    id: `card-5`,\n    list: 'list-2'\n  }\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n      const newState = state;\n      delete newState[card.id];\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { cards } = action.payload;\n\n      const newState = state;\n      cards.map(card => delete newState[card.id]);\n      console.log('CARDS',cards);\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  lists: [],\n  cards: []\n};\n\nconst archiveReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newState = { ...state };\n      newState.cards = [...newState.cards, card];\n\n      console.log('ARCHIVED', newState);\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list, cards } = action.payload;\n      console.log(list);\n\n      const newState = { ...state };\n\n      newState.cards = [...newState.cards, ...cards];\n      newState.lists = [...newState.lists, list];\n      console.log('NEW STATE', newState);\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default archiveReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = '';\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.FILTER_CARDS: {\n      const { text } = action.payload;\n\n      const newState = text;\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './listReducer';\nimport cardReducer from './cardReducer';\nimport archiveReducer from './archiveReducer';\nimport searchReducer from './searchReducer';\n\nconst rootReducer = combineReducers({\n  lists: listReducer,\n  cards: cardReducer,\n  archived: archiveReducer,\n  search: searchReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\"; //applyMiddleware, compose\nimport rootReducer from \"./reducers\";\n// import reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n// import thunk from \"redux-thunk\";\n\nexport default function configureStore(initialState) {\n    // const composeEnhancers =\n    //     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n\n    return createStore(\n        rootReducer,\n        initialState,\n        // composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n    );\n}\n"],"sourceRoot":""}
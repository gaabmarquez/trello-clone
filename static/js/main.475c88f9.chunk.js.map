{"version":3,"sources":["components/AddButton.js","components/CardForm.js","redux/actions/index.js","components/Card.js","redux/actions/cardActions.js","components/AddCard.js","components/ListForm.js","components/List.js","redux/actions/listActions.js","components/AddList.js","components/Board.js","components/UndoRedo.js","components/App.js","serviceWorker.js","redux/reducers/listReducer.js","redux/reducers/cardReducer.js","redux/reducers/archiveReducer.js","redux/reducers/index.js","index.js","redux/configureStore.js"],"names":["AddBtn","styled","button","AddButton","disabled","btnText","onClick","className","onMouseDown","ActionContainer","div","CardForm","text","toggleForm","handleInputChange","buttonText","onSubmit","minRows","autoFocus","placeholder","onBlur","value","onChange","style","styles","textArea","length","icon","color","fontSize","cursor","resize","width","border","CONSTANTS","ADD_CARD","EDIT_CARD","ARCHIVE_CARD","ADD_LIST","EDIT_LIST","ARCHIVE_LIST","DRAGGED","CardContainer","EditButton","ArchiveButton","container","margin","card","borderRadius","height","wordWrap","cardBody","padding","Card","id","index","listId","useState","isEditing","setIsEditing","cardText","setText","dispatch","useDispatch","saveCard","e","preventDefault","newText","type","payload","editCard","ev","target","toggleEdit","archive","listID","list","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","OverlayTrigger","placement","overlay","Tooltip","AddCard","formOpen","setFormOpen","createCard","uuid","addCard","prev","addAnother","FormContainer","FormInput","input","actionContainer","display","alignItems","paddingTop","ListForm","ListContainer","backgroundColor","marginRight","minWidth","maxWidth","position","title","List","cards","listTitle","setTitle","saveChanges","editList","console","log","archiveList","droppableId","droppableProps","map","key","AddListContainer","AddAnotherList","p","AddList","createList","addList","Board","lists","useSelector","state","present","useEffect","onDragEnd","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","direction","Object","keys","listCards","cardID","UndoRedo","canUndo","canRedo","onUndo","onRedo","mapDispatchToProps","UndoActionCreators","undo","redo","connect","past","future","App","archived","fontWeight","Boolean","window","location","hostname","match","initialState","listReducer","action","newList","newState","archivedList","filter","find","splice","startList","endList","cardReducer","newCard","archiveReducer","rootReducer","combineReducers","undoable","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.475c88f9.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst AddBtn = styled.button`\n  color: white;\n  background-color: #5aac44;\n  font-weight: bold;\n  margin-right: 1em;\n  &:hover {\n    color: white;\n  }\n`;\nexport default function AddButton({ disabled, btnText, onClick }) {\n  return (\n    <AddBtn className='btn' disabled={disabled} onMouseDown={onClick}>\n      {btnText}\n    </AddBtn>\n  );\n}\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport AddButton from './AddButton';\nimport styled from 'styled-components';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 0.5em;\n`;\nexport default function CardForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <>\n      <TextareaAutosize\n        minRows={3}\n        autoFocus\n        placeholder='Enter a title for this card...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <ActionContainer>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </ActionContainer>\n    </>\n  );\n}\n\nconst styles = {\n  icon: {\n    color: '#6b778c',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  },\n  textArea: {\n    resize: 'none',\n    width: '100%',\n    border: 'none'\n  }\n};\n","export * from './listActions';\nexport * from './cardActions';\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  EDIT_CARD: 'EDIT_CARD',\n  ARCHIVE_CARD: 'ARCHIVE_CARD',\n  ADD_LIST: 'ADD_LIST',\n  EDIT_LIST: 'EDIT_LIST',\n  ARCHIVE_LIST: 'ARCHIVE_LIST',\n  DRAGGED: 'DRAGGED'\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport CardForm from './CardForm';\n\nimport { editCard } from '../redux/actions';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { archiveCard } from '../redux/actions/cardActions';\n\nconst CardContainer = styled.div`\n  margin-bottom: 0.5rem !important;\n  margin-left: 0.5rem !important;\n  margin-right: 0.5rem !important;\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Card = ({ id, text, index, listId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n  const dispatch = useDispatch();\n\n  const saveCard = e => {\n    e.preventDefault();\n    setText('');\n    dispatch(editCard(id, cardText));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    dispatch(archiveCard({ id, text, list: listId }));\n    setIsEditing(false);\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Edit Card</Tooltip>}\n            >\n              <EditButton onClick={toggleEdit}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-pen'></i>\n                </span>\n              </EditButton>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Archive Card</Tooltip>}\n            >\n              <ArchiveButton onClick={archive}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-archive'></i>\n                </span>\n              </ArchiveButton>\n            </OverlayTrigger>\n\n            <div className='card-body' style={styles.cardBody}>\n              {text}\n            </div>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n  const renderEditForm = () => {\n    return (\n      <div style={styles.container}>\n        <CardForm\n          text={cardText}\n          toggleForm={toggleEdit}\n          buttonText='Save'\n          handleInputChange={handleInputChange}\n          onSubmit={saveCard}\n        />\n      </div>\n    );\n  };\n  return isEditing ? renderEditForm() : renderCard();\n};\nconst styles = {\n  container: {\n    margin: '0.5rem',\n    color: '#5e6c84'\n  },\n  card: {\n    margin: '20px',\n    borderRadius: '3px',\n    height: 'auto',\n    wordWrap: 'break-word'\n  },\n  cardBody: {\n    padding: '14px'\n  }\n};\n\nexport default Card;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, newText }\n  };\n};\n\nexport const archiveCard = (card, listID) => {\n  return {\n    type: CONSTANTS.ARCHIVE_CARD,\n    payload: { card, listID }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCard } from '../redux/actions';\nimport CardForm from './CardForm';\n\nexport default function AddCard({ listId }) {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createCard = () => {\n    setText('');\n    dispatch(addCard(listId, text));\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n  const renderForm = () => (\n    <CardForm\n      text={text}\n      buttonText='Add Card'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createCard}\n    />\n  );\n\n  const renderButton = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another card\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? renderForm() : renderButton()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: '1em',\n    color: '#5e6c84'\n  },\n  addAnother: {\n    margin: '0.5em 1em',\n    cursor: 'pointer'\n  }\n};\n","import React from 'react';\nimport AddButton from '../components/AddButton';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: #ebecf0;\n  padding: 0.5em 0.4em;\n  border-radius: 3px;\n`;\n\nconst FormInput = styled.input`\n  padding: 8px 12px;\n  resize: none;\n  width: 100%;\n  border: none;\n`;\n\nconst styles = {\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '0.5em'\n  },\n  icon: {\n    color: '#42526e',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  }\n};\n\nexport default function ListForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <FormContainer>\n      <FormInput\n        autoFocus\n        placeholder='Enter a list title...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n      />\n      <div style={styles.actionContainer}>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </div>\n    </FormContainer>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListForm from './ListForm';\nimport { editList, archiveList } from '../redux/actions/listActions';\n\nconst ListContainer = styled.div`\n  background-color: #ebecf0;\n  margin-right: 1em;\n  border-radius: 3px;\n  min-width: 272px;\n  max-width: 272px;\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  // display: none;\n  right: 45px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  // display: none;\n  right: 15px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst List = ({ id, title, cards = [], index }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setTitle] = useState(title);\n  const dispatch = useDispatch();\n\n  const saveChanges = e => {\n    e.preventDefault();\n    dispatch(editList(id, listTitle));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setTitle(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    console.log('LIST ID', id, cards);\n\n    dispatch(archiveList({id, title}, cards));\n    setIsEditing(false);\n  };\n\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <ListContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {isEditing ? (\n            <ListForm\n              text={listTitle}\n              buttonText='Save'\n              toggleForm={toggleEdit}\n              handleInputChange={handleInputChange}\n              onSubmit={saveChanges}\n            />\n          ) : (\n            <div style={{ position: 'relative' }}>\n              <h2 style={styles.title}>{title}</h2>\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Edit List title</Tooltip>}\n              >\n                <EditButton onClick={toggleEdit}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-pen'></i>\n                  </span>\n                </EditButton>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Archive List</Tooltip>}\n              >\n                <ArchiveButton onClick={archive}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-archive'></i>\n                  </span>\n                </ArchiveButton>\n              </OverlayTrigger>\n            </div>\n          )}\n          <Droppable droppableId={String(id)}>\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {cards.map((card, index) => (\n                  <Card\n                    key={card.id}\n                    index={index}\n                    text={card.text}\n                    id={card.id}\n                    listId={id}\n                  />\n                ))}\n                {provided.placeholder}\n                <AddCard listId={id} />\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#ebecf0',\n    marginRight: '1em',\n    borderRadius: '3px',\n    minWidth: '272px',\n    maxWidth: '272px'\n  },\n  actionContainer: {\n    position: 'relative'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '1.2em'\n  }\n};\nexport default List;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addList = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const editList = (id, title) => {\n  return {\n    type: CONSTANTS.EDIT_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const archiveList = (list, cards) => {\n  return {\n    type: CONSTANTS.ARCHIVE_LIST,\n    payload: { list, cards }\n  };\n};\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAGGED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList } from '../redux/actions/listActions';\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\n\nconst AddListContainer = styled.div`\n  min-width: 272px;\n  color: #fff;\n`;\n\nconst AddAnotherList = styled.p`\n  background-color: hsla(0, 0%, 100%, 0.24);\n  padding: 10px;\n  font-size: 1.1em;\n  color: white;\n  cursor: pointer;\n  border-radius: 3px;\n`;\n\nconst AddList = () => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createList = () => {\n    if (text.length > 0) {\n      dispatch(addList(text));\n      setText('');\n    }\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n\n  const renderForm = () => (\n    <ListForm\n      text={text}\n      buttonText='Add List'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createList}\n    />\n  );\n\n  const renderButton = () => (\n    <AddAnotherList\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another list\n    </AddAnotherList>\n  );\n  return (\n    <AddListContainer>\n      {formOpen ? renderForm() : renderButton()}\n    </AddListContainer>\n  );\n};\n\nexport default AddList;\n","import React, { useEffect } from 'react';\nimport List from './List';\nimport { useSelector } from 'react-redux';\nimport AddList from './AddList';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport { sort } from '../redux/actions/listActions';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: 2em;\n`;\n\nconst Board = () => {\n  const lists = useSelector(state => state.lists.present);\n  const cards = useSelector(state => state.cards.present);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('LISTS',lists);\n    console.log('CARDS', cards);\n\n  });\n\n  const onDragEnd = ({ destination, source, draggableId, type }) => {\n    if (destination) {\n      dispatch(\n        sort(\n          source.droppableId,\n          destination.droppableId,\n          source.index,\n          destination.index,\n          draggableId,\n          type\n        )\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='all-lists' direction='horizontal' type='list'>\n        {provided => (\n          <ListContainer ref={provided.innerRef} {...provided.droppableProps}>\n            {Object.keys(lists).map((key, index) => {\n              const list = lists[key];\n              const listCards =\n                list.cards.length > 0\n                  ? list.cards.map(cardID => cards[cardID])\n                  : [];\n              return (\n                <List\n                  key={list.id}\n                  id={list.id}\n                  title={list.title}\n                  cards={listCards}\n                  index={index}\n                />\n              );\n            })}\n            {provided.placeholder}\n\n            <AddList />\n          </ListContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import React from 'react'\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\nimport { connect } from 'react-redux'\n\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\n  <p>\n    <button onClick={onUndo} disabled={!canUndo}>\n      Undo\n    </button>\n    <button onClick={onRedo} disabled={!canRedo}>\n      Redo\n    </button>\n  </p>\n)\n\nconst mapStateToProps = (state) => ({\n  canUndo: state.lists.past.length > 0,\n  canRedo: state.lists.future.length > 0\n})\n\nconst mapDispatchToProps = ({\n  onUndo: UndoActionCreators.undo,\n  onRedo: UndoActionCreators.redo\n})\n\nUndoRedo = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UndoRedo)\n\nexport default UndoRedo\n","import React from 'react';\nimport './App.scss';\nimport Board from './Board';\nimport { useSelector } from 'react-redux';\nimport UndoRedo from './UndoRedo';\n\nfunction App() {\n  const archived = useSelector(state => state.archived.present);\n\n  return (\n    <div className='container-fluid mt-4'>\n      <UndoRedo />\n      <h1 style={{ color: 'white' }}>Trello Clone </h1>\n      <p style={{ color: 'white', fontWeight: 'bold' }}>\n        Archived Cards: {archived.cards.length}\n        <br />\n        Archived Lists: {archived.lists.length}\n      </p>\n\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CONSTANTS } from '../actions';\n\nconst initialState = [\n  { id: 'list-0', cards: ['card-0'], title: 'To Do' },\n  { id: 'list-1', cards: ['card-1'], title: 'Doing' },\n  { id: 'list-2', cards: ['card-2'], title: 'Done' }\n];\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n\n      const newList = {\n        title: title,\n        cards: [],\n        id: `list-${id}`\n      };\n      return [...state, newList];\n    }\n\n    case CONSTANTS.EDIT_LIST: {\n      const { title, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === id) {\n          return {\n            ...list,\n            title\n          };\n        } else {\n          return list;\n        }\n      });\n      console.log(newState);\n      return newState;\n    }\n\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list: archivedList } = action.payload;\n\n      const newState = state.filter(list => list.id !== archivedList.id);\n      console.log('NEW STATE', archivedList.id, newState);\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      console.log(action.type, 'LIST REDUCER');\n      const { listID, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === listID) {\n          return {\n            ...list,\n            cards: [...list.cards, `card-${id}`]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newState = [...state];\n      const list = newState.find(list => list.id === card.list);\n      list.cards = list.cards.filter(cardID => cardID !== card.id);\n      // console.log('LISTS>>>>>>', newState);\n\n      return newState;\n    }\n\n    case CONSTANTS.DRAGGED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type\n      } = action.payload;\n\n      const newState = [...state];\n      if (type === 'list') {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n      //same container\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      } else {\n        const startList = state.find(list => droppableIdStart === list.id);\n        const endList = state.find(list => droppableIdEnd === list.id);\n\n        const card = startList.cards.splice(droppableIndexStart, 1);\n        card.list = endList.id;\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n      console.log('NEW STATE', newState)\n\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  'card-0': {\n    text: 'To do task',\n    id: `card-0`,\n    list: 'list-0'\n  },\n  'card-1': {\n    text: 'Doing task',\n    id: `card-1`,\n    list: 'list-1'\n  },\n  'card-2': {\n    text: 'Done task',\n    id: `card-2`,\n    list: 'list-2'\n  }\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n      const newState = state;\n      delete newState[card.id];\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { cards } = action.payload;\n\n      const newState = { ...state };\n      cards.map(card => delete newState[card.id]);\n      console.log('CARDS', cards);\n      return newState;\n    }\n\n\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  lists: [],\n  cards: []\n};\n\nconst archiveReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newState = { ...state };\n      newState.cards = [...newState.cards, card];\n\n      console.log('ARCHIVED', newState);\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list, cards } = action.payload;\n      console.log(list);\n\n      const newState = { ...state };\n\n      newState.cards = [...newState.cards, ...cards];\n      newState.lists = [...newState.lists, list];\n      console.log('NEW STATE', newState);\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default archiveReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './listReducer';\nimport cardReducer from './cardReducer';\nimport archiveReducer from './archiveReducer';\nimport undoable from 'redux-undo';\n\nconst rootReducer = combineReducers({\n  lists: undoable(listReducer),\n  cards: undoable(cardReducer),\n  archived: undoable(archiveReducer)\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\"; //applyMiddleware, compose\nimport rootReducer from \"./reducers\";\n// import reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n// import thunk from \"redux-thunk\";\n\nexport default function configureStore(initialState) {\n    // const composeEnhancers =\n    //     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n\n    return createStore(\n        rootReducer,\n        initialState,\n        // composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n    );\n}\n"],"sourceRoot":""}
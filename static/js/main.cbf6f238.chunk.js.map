{"version":3,"sources":["components/AddButton.js","components/CardForm.js","redux/actions/index.js","components/Card.js","redux/actions/cardActions.js","components/AddCard.js","components/ListForm.js","components/List.js","redux/actions/listActions.js","components/AddList.js","components/Board.js","redux/actions/searchActions.js","components/App.js","serviceWorker.js","redux/reducers/listReducer.js","redux/reducers/cardReducer.js","redux/reducers/archiveReducer.js","redux/reducers/searchReducer.js","redux/reducers/index.js","redux/configureStore.js","index.js"],"names":["AddBtn","styled","button","AddButton","disabled","btnText","onClick","className","onMouseDown","ActionContainer","div","CardForm","text","toggleForm","handleInputChange","buttonText","onSubmit","minRows","autoFocus","placeholder","onBlur","value","onChange","style","styles","textArea","length","icon","color","fontSize","cursor","resize","width","border","CONSTANTS","ADD_CARD","EDIT_CARD","ARCHIVE_CARD","ADD_LIST","EDIT_LIST","ARCHIVE_LIST","DRAGGED","FILTER_CARDS","DUPLICATE_CARD","DUPLICATE_LIST","CardContainer","EditButton","DuplicateButton","ArchiveButton","container","margin","card","borderRadius","height","wordWrap","cardBody","padding","Card","id","index","listId","useState","isEditing","setIsEditing","cardText","setText","dispatch","useDispatch","search","useSelector","state","saveCard","e","preventDefault","newText","type","payload","editCard","ev","target","toggleEdit","archive","listID","list","duplicate","oldId","uuid","duplicateCard","toUpperCase","includes","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","OverlayTrigger","placement","overlay","Tooltip","AddCard","formOpen","setFormOpen","createCard","addCard","prev","addAnother","FormContainer","FormInput","input","actionContainer","display","alignItems","paddingTop","ListForm","ListContainer","backgroundColor","marginRight","minWidth","maxWidth","position","title","List","cards","listTitle","setTitle","saveChanges","editList","archiveList","newId","duplicateList","droppableId","droppableProps","map","key","AddListContainer","AddAnotherList","p","AddList","createList","addList","Board","lists","onDragEnd","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","direction","Object","keys","listCards","cardID","filterCards","navContainer","justifyContent","background","SearchButton","ClearSearh","i","SearchContainer","App","archived","searchText","setSearchText","Navbar","variant","Nav","onKeyDown","keyCode","fontWeight","Boolean","window","location","hostname","match","initialState","listReducer","action","newList","cardsIds","indexOf","newState","splice","archivedList","filter","console","log","JSON","stringify","find","startList","endList","cardReducer","newCard","newCards","push","archiveReducer","searchReducer","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbf6f238.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst AddBtn = styled.button`\n  color: white;\n  background-color: #5aac44;\n  font-weight: bold;\n  margin-right: 1em;\n  &:hover {\n    color: white;\n  }\n`;\nexport default function AddButton({ disabled, btnText, onClick }) {\n  return (\n    <AddBtn className='btn' disabled={disabled} onMouseDown={onClick}>\n      {btnText}\n    </AddBtn>\n  );\n}\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport AddButton from './AddButton';\nimport styled from 'styled-components';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 0.5em;\n`;\nexport default function CardForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <>\n      <TextareaAutosize\n        minRows={3}\n        autoFocus\n        placeholder='Enter a title for this card...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <ActionContainer>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </ActionContainer>\n    </>\n  );\n}\n\nconst styles = {\n  icon: {\n    color: '#6b778c',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  },\n  textArea: {\n    resize: 'none',\n    width: '100%',\n    border: 'none'\n  }\n};\n","export * from './listActions';\nexport * from './cardActions';\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  EDIT_CARD: 'EDIT_CARD',\n  ARCHIVE_CARD: 'ARCHIVE_CARD',\n  ADD_LIST: 'ADD_LIST',\n  EDIT_LIST: 'EDIT_LIST',\n  ARCHIVE_LIST: 'ARCHIVE_LIST',\n  DRAGGED: 'DRAGGED',\n  FILTER_CARDS: 'FILTER_CARDS',\n  DUPLICATE_CARD: 'DUPLICATE_CARD',\n  DUPLICATE_LIST: 'DUPLICATE_LIST'\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport CardForm from './CardForm';\n\nimport { editCard } from '../redux/actions';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { archiveCard, duplicateCard } from '../redux/actions/cardActions';\n\nconst CardContainer = styled.div`\n  margin-bottom: 0.5rem !important;\n  margin-left: 0.5rem !important;\n  margin-right: 0.5rem !important;\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  display: none;\n\n  right: 25px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DuplicateButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 45px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Card = ({ id, text, index, listId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n  const dispatch = useDispatch();\n  const search = useSelector(state => state.search);\n\n  const saveCard = e => {\n    e.preventDefault();\n    setText('');\n    dispatch(editCard(id, cardText));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    dispatch(archiveCard({ id, text, list: listId }));\n    setIsEditing(false);\n  };\n\n  const duplicate = () => {\n    dispatch(duplicateCard({ id, text, list: listId }));\n    setIsEditing(false);\n  };\n\n  const renderCard = () => {\n    return !search || text.toUpperCase().includes(search.toUpperCase()) ? (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Edit Card</Tooltip>}\n            >\n              <EditButton onClick={toggleEdit}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-pen'></i>\n                </span>\n              </EditButton>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Archive Card</Tooltip>}\n            >\n              <ArchiveButton onClick={archive}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-archive'></i>\n                </span>\n              </ArchiveButton>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Duplicate Card</Tooltip>}\n            >\n              <DuplicateButton onClick={duplicate}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-copy'></i>\n                </span>\n              </DuplicateButton>\n            </OverlayTrigger>\n\n            <div className='card-body' style={styles.cardBody}>\n              {text} \n            </div>\n          </CardContainer>\n        )}\n      </Draggable>\n    ) : (\n      <> </>\n    );\n  };\n  const renderEditForm = () => {\n    return (\n      <div style={styles.container}>\n        <CardForm\n          text={cardText}\n          toggleForm={toggleEdit}\n          buttonText='Save'\n          handleInputChange={handleInputChange}\n          onSubmit={saveCard}\n        />\n      </div>\n    );\n  };\n  return isEditing ? renderEditForm() : renderCard();\n};\nconst styles = {\n  container: {\n    margin: '0.5rem',\n    color: '#5e6c84'\n  },\n  card: {\n    margin: '20px',\n    borderRadius: '3px',\n    height: 'auto',\n    wordWrap: 'break-word'\n  },\n  cardBody: {\n    padding: '14px'\n  }\n};\n\nexport default Card;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, newText }\n  };\n};\n\nexport const duplicateCard = card => {\n  const oldId = card.id;\n  card.id = uuid();\n  return {\n    type: CONSTANTS.DUPLICATE_CARD,\n    payload: { card, oldId }\n  };\n};\n\nexport const archiveCard = (card, listID) => {\n  return {\n    type: CONSTANTS.ARCHIVE_CARD,\n    payload: { card, listID }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCard } from '../redux/actions';\nimport CardForm from './CardForm';\n\nexport default function AddCard({ listId }) {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createCard = () => {\n    setText('');\n    dispatch(addCard(listId, text));\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n  const renderForm = () => (\n    <CardForm\n      text={text}\n      buttonText='Add Card'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createCard}\n    />\n  );\n\n  const renderButton = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another card\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? renderForm() : renderButton()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: '1em',\n    color: '#5e6c84'\n  },\n  addAnother: {\n    margin: '0.5em 1em',\n    cursor: 'pointer'\n  }\n};\n","import React from 'react';\nimport AddButton from '../components/AddButton';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: #ebecf0;\n  padding: 0.5em 0.4em;\n  border-radius: 3px;\n`;\n\nconst FormInput = styled.input`\n  padding: 8px 12px;\n  resize: none;\n  width: 100%;\n  border: none;\n`;\n\nconst styles = {\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '0.5em'\n  },\n  icon: {\n    color: '#42526e',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  }\n};\n\nexport default function ListForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <FormContainer>\n      <FormInput\n        autoFocus\n        placeholder='Enter a list title...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n      />\n      <div style={styles.actionContainer}>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </div>\n    </FormContainer>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListForm from './ListForm';\nimport {\n  editList,\n  archiveList,\n  duplicateList\n} from '../redux/actions/listActions';\n\nconst ListContainer = styled.div`\n  background-color: #ebecf0;\n  margin-right: 1em;\n  border-radius: 3px;\n  min-width: 272px;\n  max-width: 272px;\n`;\n\nconst DuplicateButton = styled.div`\n  position: absolute;\n  right: 75px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  right: 45px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst List = ({ id, title, cards = [], index }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setTitle] = useState(title);\n\n  const dispatch = useDispatch();\n\n  const saveChanges = e => {\n    e.preventDefault();\n    dispatch(editList(id, listTitle));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setTitle(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n\n    dispatch(archiveList({ id, title }, cards));\n    setIsEditing(false);\n  };\n  const duplicate = () => {\n\n    dispatch(duplicateList(id, title, cards));\n    setIsEditing(false);\n  };\n\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <ListContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {isEditing ? (\n            <ListForm\n              text={listTitle}\n              buttonText='Save'\n              toggleForm={toggleEdit}\n              handleInputChange={handleInputChange}\n              onSubmit={saveChanges}\n            />\n          ) : (\n            <div style={{ position: 'relative' }}>\n              <h2 style={styles.title}>{title}</h2>\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Edit List title</Tooltip>}\n              >\n                <EditButton onClick={toggleEdit}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-pen'></i>\n                  </span>\n                </EditButton>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Duplicate list</Tooltip>}\n              >\n                <DuplicateButton onClick={duplicate}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-copy'></i>\n                  </span>\n                </DuplicateButton>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Archive List</Tooltip>}\n              >\n                <ArchiveButton onClick={archive}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-archive'></i>\n                  </span>\n                </ArchiveButton>\n              </OverlayTrigger>\n            </div>\n          )}\n          <Droppable droppableId={String(id)}>\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {cards.map((card, index) => (\n                  <Card\n                    key={card.id}\n                    index={index}\n                    text={card.text}\n                    id={card.id}\n                    listId={id}\n                  />\n                ))}\n                {provided.placeholder}\n                <AddCard listId={id} />\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#ebecf0',\n    marginRight: '1em',\n    borderRadius: '3px',\n    minWidth: '272px',\n    maxWidth: '272px'\n  },\n  actionContainer: {\n    position: 'relative'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '1.2em'\n  }\n};\nexport default List;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addList = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const duplicateList = (id, title, cards) => {\n  const newId = uuid();\n  return {\n    type: CONSTANTS.DUPLICATE_LIST,\n    payload: { id, title, cards, newId }\n  };\n};\n\nexport const editList = (id, title) => {\n  return {\n    type: CONSTANTS.EDIT_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const archiveList = (list, cards) => {\n  return {\n    type: CONSTANTS.ARCHIVE_LIST,\n    payload: { list, cards }\n  };\n};\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAGGED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList } from '../redux/actions/listActions';\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\n\nconst AddListContainer = styled.div`\n  min-width: 272px;\n  color: #fff;\n`;\n\nconst AddAnotherList = styled.p`\n  background-color: hsla(0, 0%, 100%, 0.24);\n  padding: 10px;\n  font-size: 1.1em;\n  color: white;\n  cursor: pointer;\n  border-radius: 3px;\n`;\n\nconst AddList = () => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createList = () => {\n    if (text.length > 0) {\n      dispatch(addList(text));\n      setText('');\n    }\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n\n  const renderForm = () => (\n    <ListForm\n      text={text}\n      buttonText='Add List'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createList}\n    />\n  );\n\n  const renderButton = () => (\n    <AddAnotherList\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another list\n    </AddAnotherList>\n  );\n  return (\n    <AddListContainer>\n      {formOpen ? renderForm() : renderButton()}\n    </AddListContainer>\n  );\n};\n\nexport default AddList;\n","import React from 'react';\nimport List from './List';\nimport { useSelector } from 'react-redux';\nimport AddList from './AddList';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport { sort } from '../redux/actions/listActions';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: 2em;\n`;\n\nconst Board = () => {\n  const lists = useSelector(state => state.lists);\n  const cards = useSelector(state => state.cards);\n\n  const dispatch = useDispatch();\n\n  const onDragEnd = ({ destination, source, draggableId, type }) => {\n    if (destination) {\n      dispatch(\n        sort(\n          source.droppableId,\n          destination.droppableId,\n          source.index,\n          destination.index,\n          draggableId,\n          type\n        )\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='all-lists' direction='horizontal' type='list'>\n        {provided => (\n          <ListContainer ref={provided.innerRef} {...provided.droppableProps}>\n            {Object.keys(lists).map((key, index) => {\n              const list = lists[key];\n              const listCards =\n                list.cards.length > 0\n                  ? list.cards.map(cardID => cards[cardID])\n                  : [];\n              return (\n                <List\n                  key={list.id}\n                  id={list.id}\n                  title={list.title}\n                  cards={listCards}\n                  index={index}\n                />\n              );\n            })}\n            {provided.placeholder}\n\n            <AddList />\n          </ListContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import { CONSTANTS } from '.';\n\nexport const filterCards = text => {\n  return {\n    type: CONSTANTS.FILTER_CARDS,\n    payload: { text }\n  };\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Board from './Board';\nimport { useSelector } from 'react-redux';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { filterCards } from '../redux/actions/searchActions';\n\nconst style = {\n  navContainer: {\n    display: 'grid',\n    justifyContent: 'space-around',\n    background: 'rgba(0,0,0,.15)'\n  }\n};\n\nconst SearchButton = styled.button`\n  margin-left: 0.6em;\n  font-weight: bold;\n  background-color: #006098;\n  border: 1px solid #bf4600;\n\n  color: white;\n  &:hover {\n    color: white;\n    background-color: #bf4600;\n  }\n`;\n\nconst ClearSearh = styled.i`\n  right: 5px;\n  position: absolute;\n  top: 10px;\n  color: #6b778c;\n  cursor: pointer;\n  font-size: 1.2em;\n`;\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nfunction App() {\n  const archived = useSelector(state => state.archived);\n  const [searchText, setSearchText] = useState('');\n  const dispatch = useDispatch();\n\n  const handleKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      search();\n    }\n  };\n  const handleInputChange = ev => {\n    setSearchText(ev.target.value);\n  };\n  const search = () => {\n    dispatch(filterCards(searchText));\n  };\n  const clearSearh = () => {\n    setSearchText('');\n    dispatch(filterCards(''));\n  };\n\n  return (\n    <>\n      <Navbar variant='dark' style={style.navContainer}>\n        <Nav className='mr-auto'>\n          <SearchContainer>\n            <input\n              type='text'\n              value={searchText}\n              onKeyDown={handleKeyDown}\n              onChange={handleInputChange}\n              placeholder='Search text inside cards'\n              className='mr-sm-2  form-control'\n            />\n            {searchText.length > 0 ? (\n              <ClearSearh className='fas fa-times' onClick={clearSearh} />\n            ) : (\n              <> </>\n            )}\n          </SearchContainer>\n          <SearchButton className='btn' onClick={search}>\n            Search\n          </SearchButton>\n        </Nav>\n      </Navbar>\n      <div className='container-fluid mt-4'>\n        <h1 style={{ color: 'white' }}>Trello Clone </h1>\n        <p style={{ color: 'white', fontWeight: 'bold' }}>\n          Archived Cards: {archived.cards.length}\n          <br />\n          Archived Lists: {archived.lists.length}\n        </p>\n\n        <Board />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CONSTANTS } from '../actions';\nimport { uuid } from 'uuidv4';\n\nconst initialState = [\n  { id: '10', cards: ['0', '3'], title: 'To Do' },\n  { id: '11', cards: ['1', '4'], title: 'Doing' },\n  { id: '12', cards: ['2', '5'], title: 'Done' }\n];\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title } = action.payload;\n      const id = uuid();\n      const newList = {\n        title: title,\n        cards: [],\n        id\n      };\n      return [...state, newList];\n    }\n    case CONSTANTS.DUPLICATE_LIST: {\n      const { title, id, cards, newId } = action.payload;\n      const cardsIds = cards.map(card => card.id);\n\n      //get index of list to be copied\n      const index = state.map(list => list.id).indexOf(id);\n\n      const newList = {\n        title: title,\n        cards: cardsIds,\n        id: newId\n      };\n      const newState = [...state];\n\n      newState.splice(index, 0, newList);\n      return newState;\n    }\n    case CONSTANTS.EDIT_LIST: {\n      const { title, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === id) {\n          return {\n            ...list,\n            title\n          };\n        } else {\n          return list;\n        }\n      });\n      return newState;\n    }\n\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list: archivedList } = action.payload;\n\n      const newState = state.filter(list => list.id !== archivedList.id);\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === listID) {\n          return {\n            ...list,\n            cards: [...list.cards, id]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n\n    case CONSTANTS.DUPLICATE_CARD: {\n      const { card, oldId } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === card.list) {\n          const index = list.cards.indexOf(oldId);\n          console.log(index, oldId, JSON.stringify(list.cards));\n          list.cards.splice(index, 0, card.id);\n\n          return {\n            ...list,\n            cards: [...list.cards]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newState = [...state];\n      const list = newState.find(list => list.id === card.list);\n      list.cards = list.cards.filter(cardID => cardID !== card.id);\n\n      return newState;\n    }\n\n    case CONSTANTS.DRAGGED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type\n      } = action.payload;\n\n      const newState = [...state];\n      if (type === 'list') {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n      //same container\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      } else {\n        const startList = state.find(list => droppableIdStart === list.id);\n        const endList = state.find(list => droppableIdEnd === list.id);\n\n        const card = startList.cards.splice(droppableIndexStart, 1);\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { CONSTANTS } from '../actions';\nimport { uuid } from 'uuidv4';\n\nconst initialState = {\n  '0': {\n    text: 'To do task',\n    id: `0`,\n    list: '10'\n  },\n  '1': {\n    text: 'Doing task',\n    id: `1`,\n    list: '11'\n  },\n  '2': {\n    text: 'Done task',\n    id: `2`,\n    list: '12'\n  },\n  '3': {\n    text: 'TO FILTER: To do task',\n    id: `3`,\n    list: '10'\n  },\n  '4': {\n    text: 'TO FILTER: Doing task',\n    id: `4`,\n    list: '11'\n  },\n  '5': {\n    text: 'TO FILTER: Done task',\n    id: `5`,\n    list: '12'\n  }\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: id,\n        list: listID\n      };\n      // debugger;\n      return { ...state, [id]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      console.log(state[id], id);\n      console.log(JSON.stringify(state));\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [id]: card };\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n      const newState = state;\n      delete newState[card.id];\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { cards } = action.payload;\n\n      const newState = state;\n      cards.map(card => delete newState[card.id]);\n      return newState;\n    }\n    case CONSTANTS.DUPLICATE_CARD: {\n      const { card } = action.payload;\n      return { ...state, [card.id]: card };\n    }\n    case CONSTANTS.DUPLICATE_LIST: {\n      const { cards, newId } = action.payload;\n      let newCards = [];\n\n      for (const card of cards) {\n        const newCard = { ...card };\n        newCard.id = uuid();\n        newCard.list = newId;\n        newCards.push(newCard);\n      }\n\n      const newState = { ...state };\n\n      for (const card of newCards) {\n        newState[card.id] = card;\n      }\n\n      // console.log(newCards[0].id, cards[0].id);\n      action.payload.cards = newCards;\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  lists: [],\n  cards: []\n};\n\nconst archiveReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newState = { ...state };\n      newState.cards = [...newState.cards, card];\n\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list, cards } = action.payload;\n\n      const newState = { ...state };\n\n      newState.cards = [...newState.cards, ...cards];\n      newState.lists = [...newState.lists, list];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default archiveReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = '';\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.FILTER_CARDS: {\n      const { text } = action.payload;\n\n      const newState = text;\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './listReducer';\nimport cardReducer from './cardReducer';\nimport archiveReducer from './archiveReducer';\nimport searchReducer from './searchReducer';\n\nconst rootReducer = combineReducers({\n  cards: cardReducer,\n  lists: listReducer,\n  archived: archiveReducer,\n  search: searchReducer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'trello-clone',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(initialState) {\n  let store = createStore(persistedReducer, initialState);\n  let persistor = persistStore(store);\n  return { store, persistor };\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { persistor, store } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Card.js","redux/actions/index.js","components/AddCard.js","redux/actions/cardActions.js","components/List.js","components/AddList.js","redux/actions/listActions.js","components/Board.js","components/App.js","serviceWorker.js","redux/reducers/listReducer.js","redux/reducers/cardReducers.js","redux/reducers/index.js","index.js","redux/configureStore.js"],"names":["CardContainer","styled","div","styles","card","margin","boxSizing","borderRadius","height","wordWrap","cardBody","padding","fontSize","Card","id","text","index","draggableId","String","provided","className","ref","innerRef","draggableProps","dragHandleProps","style","CONSTANTS","ADD_CARD","ADD_LIST","DRAGGED","AddButton","button","AddCard","listId","useState","formOpen","setFormOpen","setText","dispatch","useDispatch","createCard","listID","uuid","type","payload","addCard","handleInputChange","ev","target","value","toggleForm","prev","container","minRows","autoFocus","placeholder","onBlur","onChange","textArea","actionContainer","disabled","length","onMouseDown","onClick","icon","addAnother","color","cursor","display","alignItems","marginTop","resize","width","border","ListContainer","backgroundColor","marginRight","minWidth","maxWidth","title","List","cards","droppableId","droppableProps","map","key","FormContainer","FormInput","input","AddListContainer","AddAnotherList","p","paddingTop","AddList","createList","addList","Board","lists","useSelector","state","onDragEnd","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","direction","Object","keys","list","listCards","cardID","App","Boolean","window","location","hostname","match","initialState","listReducer","action","newList","console","log","newState","splice","find","startList","endList","cardReducer","newCard","EDIT_CARD","newText","DELETE_CARD","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78d495d7.chunk.js","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\nmargin: 10px;\nboxsizing: border-box;\nborder-radius: 3px;\nheight: auto;\nword-wrap: break-word;\n`;\n\nconst Card = ({ id, text, index }) => {\n \n\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <CardContainer>\n          <div\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <div className='card-body' style={styles.cardBody}>\n              {text}\n            </div>\n          </div>\n        </CardContainer>\n      )}\n    </Draggable>\n  );\n};\nconst styles = {\n  card: {\n    margin: '20px',\n    boxSizing: 'border-box',\n    borderRadius: '3px',\n    height: 'auto',\n    wordWrap: 'break-word'\n  },\n  cardBody: {\n    padding: '10px',\n    fontSize: '14px'\n  }\n};\n\nexport default Card;\n","export * from './listActions'\nexport * from './cardActions'\n\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  ADD_LIST: 'ADD_LIST',\n  DRAGGED: 'DRAGGED'\n\n\n};\n","import React, { useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\nimport { addCard } from \"../redux/actions\";\n\nconst AddButton = styled.button`\n  color: white;\n  background-color: #5aac44;\n  font-weight: bold;\n  margin-right: 1em;\n  &:hover {\n    color: white;\n  }\n`;\nexport default function AddCard({ listId }) {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createCard = () => {\n    setText('');\n    dispatch(addCard(listId, text));\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n  const formRender = () => (\n    <>\n      <TextareaAutosize\n        minRows={3}\n        autoFocus\n        placeholder='Enter a title for this card...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <div style={styles.actionContainer}>\n        <AddButton\n          className='btn'\n          disabled={text.length === 0}\n          onMouseDown={createCard}\n        >\n          Add Card\n        </AddButton>\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i\n            className='fas fa-times fa-lg'\n            style={styles.actionContainer.icon}\n          ></i>\n        </span>\n      </div>\n    </>\n  );\n\n  const buttonRender = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another card\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? formRender() : buttonRender()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: '1em',\n    color: '#5e6c84'\n  },\n  addAnother: {\n    margin: '0.5em 1em',\n    cursor: 'pointer'\n  },\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '0.5em',\n    icon: {\n      color: '#6b778c',\n      fontSize: '1.5em',\n      cursor: 'pointer'\n    }\n  },\n\n  textArea: {\n    resize: 'none',\n    width: '100%',\n    border: 'none'\n  }\n};\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\n\n\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","import React from 'react';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  background-color: #ebecf0;\n  margin-right: 1em;\n  box-sizing: border-box;\n  border-radius: 3px;\n  min-width: 272px;\n  max-width: 272px;\n`;\n\nconst List = ({ id, title, cards, index }) => {\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <ListContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <h2 style={styles.title}>{title}</h2>\n\n          <Droppable droppableId={String(id)}>\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {cards.map((card, index) => (\n                  <Card\n                    key={card.id}\n                    index={index}\n                    text={card.text}\n                    id={card.id}\n                  />\n                ))}\n                {provided.placeholder}\n                <AddCard listId={id} />\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#ebecf0',\n    marginRight: '1em',\n    boxSizing: 'border-box',\n    borderRadius: '3px',\n    minWidth: '272px',\n    maxWidth: '272px'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '1.2em'\n  }\n};\nexport default List;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList } from '../redux/actions/listActions';\n\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: #ebecf0;\n  padding: 0.5em 0.4em;\n  box-sizing: border-box;\n  border-radius: 3px;\n`;\n\nconst FormInput = styled.input`\n  padding: 8px 12px;\n  resize: none;\n  width: 100%;\n  border: none;\n`;\nconst AddListContainer = styled.div`\n  min-width: 272px;\n  color: #fff;\n`;\n\nconst AddAnotherList = styled.p`\n  background-color: hsla(0, 0%, 100%, 0.24);\n  padding: 10px;\n  font-size: 1.1em;\n  color: white;\n  cursor: pointer;\n  box-sizing: border-box;\n  border-radius: 3px;\n`;\n\nconst AddButton = styled.button`\n  color: white;\n  background-color: #5aac44;\n  font-weight: bold;\n  margin-right: 1em;\n  &:hover {\n    color: white;\n  }\n`;\nconst styles = {\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '0.5em'\n  },\n  icon: {\n    color: '#42526e',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  }\n};\n\nconst AddList = () => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createList = () => {\n    if (text.length > 0) {\n      dispatch(addList(text));\n      setText('');\n    }\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n\n  const formRender = () => (\n    <FormContainer>\n      <FormInput\n        autoFocus\n        placeholder='Enter a list title...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n      />\n      <div style={styles.actionContainer}>\n        <AddButton\n          className='btn'\n          disabled={text.length === 0}\n          onMouseDown={createList}\n        >\n          Add List\n        </AddButton>\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </div>\n    </FormContainer>\n  );\n\n  const buttonRender = () => (\n    <AddAnotherList\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another list\n    </AddAnotherList>\n  );\n  return (\n    <AddListContainer>\n      {formOpen ? formRender() : buttonRender()}\n    </AddListContainer>\n  );\n};\n\nexport default AddList;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\n\n\n// export const addList = title => {\n//   return {\n//     type: CONSTANTS.ADD_LIST,\n//     payload: title\n//   };\n// };\n\nexport const addList = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAGGED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n","import React from 'react';\nimport List from './List';\nimport { useSelector } from 'react-redux';\nimport AddList from './AddList';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport { sort } from '../redux/actions/listActions';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: 2em;\n`;\n\nconst Board = () => {\n  const lists = useSelector(state => state.lists);\n  const cards = useSelector(state => state.cards);\n\n  const dispatch = useDispatch();\n\n  const onDragEnd = ({ destination, source, draggableId, type }) => {\n    if (destination) {\n      dispatch(\n        sort(\n          source.droppableId,\n          destination.droppableId,\n          source.index,\n          destination.index,\n          draggableId,\n          type\n        )\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='all-lists' direction='horizontal' type='list'>\n        {provided => (\n          <ListContainer ref={provided.innerRef} {...provided.droppableProps}>\n            {Object.keys(lists).map((key, index) => {\n              const list = lists[key];\n              const listCards = list.cards.map(cardID => cards[cardID]);\n\n              return (\n                <List\n                  key={list.id}\n                  id={list.id}\n                  title={list.title}\n                  cards={listCards}\n                  index={index}\n                />\n              );\n            })}\n            {provided.placeholder}\n\n            <AddList />\n          </ListContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport './App.scss';\nimport Board from './Board';\n\nfunction App() {\n  return (\n    <div className='container-fluid mt-4'>\n      <h1 style={{ color: 'white' }}>Trello Clone </h1>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CONSTANTS } from '../actions';\n\nconst initialState = [{ id: 'list-0', cards: ['card-0'], title: 'To Do' },\n{ id: 'list-1', cards: ['card-1'], title: 'Doing' },\n{ id: 'list-2', cards: ['card-2'], title: 'Done' }];\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n\n      const newList = {\n        title: title,\n        cards: [],\n        id: `list-${id}`\n      };\n      return [...state, newList];\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      console.log(action.type, 'LIST REDUCER');\n      const { listID, id } = action.payload;\n\n      const newState = state.map(list => {\n        if (list.id === listID) {\n          return {\n            ...list,\n            cards: [...list.cards, `card-${id}`]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      return newState;\n    }\n    case CONSTANTS.DRAGGED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type\n      } = action.payload;\n\n      const newState = [...state];\n      if (type === 'list') {\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n      //same container\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      } else {\n        const startList = state.find(list => droppableIdStart === list.id);\n        const endList = state.find(list => droppableIdEnd === list.id);\n\n        const card = startList.cards.splice(droppableIndexStart, 1);\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"To do task\",\n    id: `card-0`,\n    list: \"list-0\"\n  },\n  \"card-1\": {\n    text: \"Doing task\",\n    id: `card-1`,\n    list: \"list-1\"\n  },\n  \"card-2\": {\n    text: \"Done task\",\n    id: `card-2`,\n    list: \"list-2\"\n  }\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n      console.log(action.type, 'CARD REDUCER');\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './listReducer';\nimport cardReducer from './cardReducers';\n\nconst rootReducer = combineReducers({\n  lists: listReducer,\n  cards: cardReducer\n});\n\nexport default rootReducer;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\"; //applyMiddleware, compose\nimport rootReducer from \"./reducers\";\n// import reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n// import thunk from \"redux-thunk\";\n\nexport default function configureStore(initialState) {\n    // const composeEnhancers =\n    //     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n\n    return createStore(\n        rootReducer,\n        initialState,\n        // composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n    );\n}\n"],"sourceRoot":""}
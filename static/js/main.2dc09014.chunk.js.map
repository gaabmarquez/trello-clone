{"version":3,"sources":["components/AddButton.js","components/CardForm.js","redux/actions/index.js","components/Card.js","redux/actions/cardActions.js","components/AddCard.js","components/ListForm.js","components/List.js","redux/actions/listActions.js","components/AddList.js","components/Board.js","components/Archived.js","redux/actions/searchActions.js","components/App.js","serviceWorker.js","redux/reducers/listReducer.js","redux/reducers/cardReducer.js","redux/reducers/archiveReducer.js","redux/reducers/searchReducer.js","redux/reducers/index.js","redux/configureStore.js","index.js"],"names":["AddBtn","styled","button","AddButton","disabled","btnText","onClick","className","onMouseDown","ActionContainer","div","CardForm","text","toggleForm","handleInputChange","buttonText","onSubmit","minRows","autoFocus","placeholder","onBlur","value","onChange","style","styles","textArea","length","icon","color","fontSize","cursor","resize","width","border","padding","CONSTANTS","ADD_CARD","EDIT_CARD","ARCHIVE_CARD","ADD_LIST","EDIT_LIST","ARCHIVE_LIST","DRAGGED","FILTER_CARDS","DUPLICATE_CARD","DUPLICATE_LIST","UNDO_LAST_ACTION","REDO_LAST_ACTION","CardContainer","DuplicateButton","EditButton","ArchiveButton","container","margin","card","borderRadius","height","wordWrap","cardBody","marginBottom","Card","id","index","listId","useState","isEditing","setIsEditing","cardText","setText","dispatch","useDispatch","search","useSelector","state","saveCard","e","preventDefault","newText","type","payload","editCard","ev","target","toggleEdit","archive","listID","list","duplicate","oldId","uuid","duplicateCard","toUpperCase","includes","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","OverlayTrigger","placement","overlay","Tooltip","AddCard","formOpen","setFormOpen","createCard","addCard","prev","addAnother","FormContainer","FormInput","input","actionContainer","display","alignItems","paddingTop","ListForm","ListContainer","backgroundColor","marginRight","minWidth","maxWidth","position","title","wordBreak","List","cards","listTitle","setTitle","saveChanges","editList","archiveList","newId","duplicateList","droppableId","droppableProps","map","key","AddListContainer","AddAnotherList","p","AddList","createList","addList","MenuButton","Board","lists","undo","onDragEnd","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","direction","past","Object","keys","present","listCards","cardID","filter","undefined","ArchivedContainer","ArchivedListContainer","ArchivedCardContainer","Archived","showMenu","setShowMenu","toggleMenu","archived","marginTop","body","top","right","filterCards","navContainer","justifyContent","background","ClearSearh","i","SearchContainer","MainContainer","App","searchText","setSearchText","Navbar","Nav","onKeyUp","Boolean","window","location","hostname","match","lastAction","initialState","future","actionsThatNotAffectState","listReducer","action","newList","newState","cardsIds","indexOf","newPresent","splice","archivedList","newCards","find","startList","startListNewCards","endList","endListNewCards","console","log","cardReducer","newCard","push","actionsThatAffectState","archiveReducer","searchReducer","rootReducer","combineReducers","persistConfig","storage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedReducer","persistReducer","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dc09014.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst AddBtn = styled.button`\n  color: white;\n  background-color: #5aac44;\n  font-weight: bold;\n  margin-right: 1em;\n  &:hover {\n    color: white;\n  }\n`;\nexport default function AddButton({ disabled, btnText, onClick }) {\n  return (\n    <AddBtn className='btn' disabled={disabled} onMouseDown={onClick}>\n      {btnText}\n    </AddBtn>\n  );\n}\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport AddButton from './AddButton';\nimport styled from 'styled-components';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 0.5em;\n`;\nexport default function CardForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <>\n      <TextareaAutosize\n        minRows={3}\n        autoFocus\n        placeholder='Enter a title for this card...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n        style={styles.textArea}\n      />\n      <ActionContainer>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </ActionContainer>\n    </>\n  );\n}\n\nconst styles = {\n  icon: {\n    color: '#6b778c',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  },\n  textArea: {\n    resize: 'none',\n    width: '100%',\n    border: 'none',\n    padding: '8px'\n  }\n};\n","export * from './listActions';\nexport * from './cardActions';\n\nexport const CONSTANTS = {\n  ADD_CARD: 'ADD_CARD',\n  EDIT_CARD: 'EDIT_CARD',\n  ARCHIVE_CARD: 'ARCHIVE_CARD',\n  ADD_LIST: 'ADD_LIST',\n  EDIT_LIST: 'EDIT_LIST',\n  ARCHIVE_LIST: 'ARCHIVE_LIST',\n  DRAGGED: 'DRAGGED',\n  FILTER_CARDS: 'FILTER_CARDS',\n  DUPLICATE_CARD: 'DUPLICATE_CARD',\n  DUPLICATE_LIST: 'DUPLICATE_LIST',\n  UNDO_LAST_ACTION: 'UNDO_LAST_ACTION',\n  REDO_LAST_ACTION: 'REDO_LAST_ACTION'\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport CardForm from './CardForm';\n\nimport { editCard } from '../redux/actions';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { archiveCard, duplicateCard } from '../redux/actions/cardActions';\n\nconst CardContainer = styled.div`\n  margin-bottom: 0.5rem !important;\n  margin-left: 0.5rem !important;\n  margin-right: 0.5rem !important;\n`;\n\nconst DuplicateButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 70px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    color: #bf4600;\n    opacity: 0.8;\n  }\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  display: none;\n\n  right: 40px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    color: #bf4600;\n    opacity: 0.8;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  display: none;\n  right: 10px;\n  bottom: 0px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    color: #bf4600;\n    opacity: 0.8;\n  }\n`;\n\nconst Card = ({ id, text, index, listId }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n  const dispatch = useDispatch();\n  const search = useSelector(state => state.search);\n\n  const saveCard = e => {\n    e.preventDefault();\n    setText(cardText);\n    dispatch(editCard(id, cardText));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    dispatch(archiveCard({ id, text, list: listId }));\n    setIsEditing(false);\n  };\n\n  const duplicate = () => {\n    dispatch(duplicateCard({ id, text: `Copy of ${text}`, list: listId }));\n    setIsEditing(false);\n  };\n\n  const renderCard = () => {\n    return !search || text.toUpperCase().includes(search.toUpperCase()) ? (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            className='card'\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Duplicate Card</Tooltip>}\n            >\n              <DuplicateButton onClick={duplicate}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-copy'></i>\n                </span>\n              </DuplicateButton>\n            </OverlayTrigger>\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Edit Card</Tooltip>}\n            >\n              <EditButton onClick={toggleEdit}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-pen'></i>\n                </span>\n              </EditButton>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement='top'\n              overlay={<Tooltip>Archive Card</Tooltip>}\n            >\n              <ArchiveButton onClick={archive}>\n                <span>\n                  &nbsp;\n                  <i className='fas fa-archive'></i>\n                </span>\n              </ArchiveButton>\n            </OverlayTrigger>\n\n            <div className='card-body' style={styles.cardBody}>\n              {text}\n            </div>\n          </CardContainer>\n        )}\n      </Draggable>\n    ) : (\n      <> </>\n    );\n  };\n  const renderEditForm = () => {\n    return (\n      <div style={styles.container}>\n        <CardForm\n          text={cardText}\n          toggleForm={toggleEdit}\n          buttonText='Save'\n          handleInputChange={handleInputChange}\n          onSubmit={saveCard}\n        />\n      </div>\n    );\n  };\n  return isEditing ? renderEditForm() : renderCard();\n};\nconst styles = {\n  container: {\n    margin: '0.5rem',\n    color: '#5e6c84'\n  },\n  card: {\n    margin: '20px',\n    borderRadius: '3px',\n    height: 'auto',\n    wordWrap: 'break-word'\n  },\n  cardBody: {\n    padding: '5px 10px',\n    marginBottom: '20px'\n  }\n};\n\nexport default Card;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, newText }\n  };\n};\n\nexport const duplicateCard = card => {\n  const oldId = card.id;\n  card.id = uuid();\n  return {\n    type: CONSTANTS.DUPLICATE_CARD,\n    payload: { card, oldId }\n  };\n};\n\nexport const archiveCard = (card, listID) => {\n  return {\n    type: CONSTANTS.ARCHIVE_CARD,\n    payload: { card, listID }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addCard } from '../redux/actions';\nimport CardForm from './CardForm';\n\nexport default function AddCard({ listId }) {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createCard = () => {\n    setText('');\n    dispatch(addCard(listId, text));\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n  const renderForm = () => (\n    <CardForm\n      text={text}\n      buttonText='Add Card'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createCard}\n    />\n  );\n\n  const renderButton = () => (\n    <p\n      style={styles.addAnother}\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another card\n    </p>\n  );\n  return (\n    <div style={styles.container}>\n      {formOpen ? renderForm() : renderButton()}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    margin: '1em',\n    color: '#5e6c84'\n  },\n  addAnother: {\n    margin: '0.5em 1em',\n    cursor: 'pointer'\n  }\n};\n","import React from 'react';\nimport AddButton from '../components/AddButton';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: #ebecf0;\n  padding: 0.5em 0.4em;\n  border-radius: 3px;\n`;\n\nconst FormInput = styled.input`\n  padding: 8px 12px;\n  resize: none;\n  width: 100%;\n  border: none;\n`;\n\nconst styles = {\n  actionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '0.5em'\n  },\n  icon: {\n    color: '#42526e',\n    fontSize: '1.5em',\n    cursor: 'pointer'\n  }\n};\n\nexport default function ListForm({\n  text,\n  toggleForm,\n  handleInputChange,\n  buttonText,\n  onSubmit\n}) {\n  return (\n    <FormContainer>\n      <FormInput\n        autoFocus\n        placeholder='Enter a list title...'\n        onBlur={toggleForm}\n        value={text}\n        onChange={handleInputChange}\n      />\n      <div style={styles.actionContainer}>\n        <AddButton\n          btnText={buttonText}\n          disabled={text.length === 0}\n          onClick={onSubmit}\n        />\n\n        <span onClick={toggleForm}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n      </div>\n    </FormContainer>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Card from './Card';\nimport AddCard from './AddCard';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport ListForm from './ListForm';\nimport {\n  editList,\n  archiveList,\n  duplicateList\n} from '../redux/actions/listActions';\n\nconst ListContainer = styled.div`\n  background-color: #ebecf0;\n  margin-right: 1em;\n  border-radius: 3px;\n  min-width: 272px;\n  max-width: 272px;\n`;\n\nconst DuplicateButton = styled.div`\n  position: absolute;\n  right: 75px;\n  top: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n    color: #bf4600;\n  }\n`;\n\nconst EditButton = styled.div`\n  position: absolute;\n  right: 45px;\n  top: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n    color: #bf4600;\n  }\n`;\n\nconst ArchiveButton = styled.div`\n  position: absolute;\n  right: 15px;\n  top: 5px;\n  opacity: 0.5;\n  ${ListContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n    color: #bf4600;\n  }\n`;\nconst List = ({ id, title, cards = [], index }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setTitle] = useState(title);\n\n  const dispatch = useDispatch();\n\n  const saveChanges = e => {\n    e.preventDefault();\n    dispatch(editList(id, listTitle));\n    setIsEditing(false);\n  };\n\n  const handleInputChange = ev => {\n    setTitle(ev.target.value);\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const archive = () => {\n    dispatch(archiveList({ id, title }, cards));\n    setIsEditing(false);\n  };\n  const duplicate = () => {\n    dispatch(duplicateList(id, title, cards));\n    setIsEditing(false);\n  };\n\n  return (\n    <Draggable draggableId={String(id)} index={index}>\n      {provided => (\n        <ListContainer\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {isEditing ? (\n            <ListForm\n              text={listTitle}\n              buttonText='Save'\n              toggleForm={toggleEdit}\n              handleInputChange={handleInputChange}\n              onSubmit={saveChanges}\n            />\n          ) : (\n            <div style={{ position: 'relative' }}>\n              <h2 style={styles.title}>{title}</h2>\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Edit List title</Tooltip>}\n              >\n                <EditButton onClick={toggleEdit}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-pen'></i>\n                  </span>\n                </EditButton>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Duplicate list</Tooltip>}\n              >\n                <DuplicateButton onClick={duplicate}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-copy'></i>\n                  </span>\n                </DuplicateButton>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip>Archive List</Tooltip>}\n              >\n                <ArchiveButton onClick={archive}>\n                  <span>\n                    &nbsp;\n                    <i className='fas fa-archive'></i>\n                  </span>\n                </ArchiveButton>\n              </OverlayTrigger>\n            </div>\n          )}\n          <Droppable droppableId={String(id)}>\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {cards.map((card, index) => (\n                  <Card\n                    key={card.id}\n                    index={index}\n                    text={card.text}\n                    id={card.id}\n                    listId={id}\n                  />\n                ))}\n                {provided.placeholder}\n                <AddCard listId={id} />\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#ebecf0',\n    marginRight: '1em',\n    borderRadius: '3px',\n    minWidth: '272px',\n    maxWidth: '272px'\n  },\n  actionContainer: {\n    position: 'relative'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '1.2em',\n    wordBreak: 'break-all',\n    width: '70%'\n  }\n};\nexport default List;\n","import { CONSTANTS } from '.';\nimport { uuid } from 'uuidv4';\n\nexport const addList = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const duplicateList = (id, title, cards) => {\n  const newId = uuid();\n  return {\n    type: CONSTANTS.DUPLICATE_LIST,\n    payload: { id, title, cards, newId }\n  };\n};\n\nexport const editList = (id, title) => {\n  return {\n    type: CONSTANTS.EDIT_LIST,\n    payload: { title, id }\n  };\n};\n\nexport const archiveList = (list, cards) => {\n  return {\n    type: CONSTANTS.ARCHIVE_LIST,\n    payload: { list, cards }\n  };\n};\n\nexport const undoLastAction = () => {\n  return {\n    type: CONSTANTS.UNDO_LAST_ACTION\n  };\n};\n\nexport const redoLastAction = () => {\n  return {\n    type: CONSTANTS.REDO_LAST_ACTION\n  };\n};\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: CONSTANTS.DRAGGED,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList } from '../redux/actions/listActions';\nimport styled from 'styled-components';\nimport ListForm from './ListForm';\n\nconst AddListContainer = styled.div`\n  min-width: 272px;\n  color: #fff;\n`;\n\nconst AddAnotherList = styled.p`\n  background-color: hsla(0, 0%, 100%, 0.24);\n  padding: 10px;\n  font-size: 1.1em;\n  color: white;\n  cursor: pointer;\n  border-radius: 3px;\n`;\n\nconst AddList = () => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const createList = () => {\n    if (text.length > 0) {\n      dispatch(addList(text));\n      setText('');\n    }\n  };\n\n  const handleInputChange = ev => {\n    setText(ev.target.value);\n  };\n\n  const toggleForm = () => {\n    setFormOpen(prev => !prev);\n    setText('');\n  };\n\n  const renderForm = () => (\n    <ListForm\n      text={text}\n      buttonText='Add List'\n      toggleForm={toggleForm}\n      handleInputChange={handleInputChange}\n      onSubmit={createList}\n    />\n  );\n\n  const renderButton = () => (\n    <AddAnotherList\n      onClick={() => {\n        setFormOpen(prev => !prev);\n      }}\n    >\n      <i className='fas fa-plus'> </i> &nbsp; Add another list\n    </AddAnotherList>\n  );\n  return (\n    <AddListContainer>\n      {formOpen ? renderForm() : renderButton()}\n    </AddListContainer>\n  );\n};\n\nexport default AddList;\n","import React from 'react';\nimport List from './List';\nimport { useSelector } from 'react-redux';\nimport AddList from './AddList';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux';\nimport { sort } from '../redux/actions/listActions';\nimport styled from 'styled-components';\nimport { undoLastAction } from '../redux/actions/listActions';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: 2em;\n`;\n\nconst MenuButton = styled.button`\n  position: absolute;\n  color: white;\n  top: 55px;\n  right: 140px;\n  font-weight: bold;\n  margin-right: 1em;\n  background-color: hsla(0, 0%, 100%, 0.24);\n  &:hover {\n    color: white;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nconst Board = () => {\n  const lists = useSelector(state => state.lists);\n  const cards = useSelector(state => state.cards);\n\n  const dispatch = useDispatch();\n\n  const undo = () => {\n    dispatch(undoLastAction());\n  };\n\n  const onDragEnd = ({ destination, source, draggableId, type }) => {\n    if (destination) {\n      dispatch(\n        sort(\n          source.droppableId,\n          destination.droppableId,\n          source.index,\n          destination.index,\n          draggableId,\n          type\n        )\n      );\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='all-lists' direction='horizontal' type='list'>\n        {provided => (\n          <ListContainer ref={provided.innerRef} {...provided.droppableProps}>\n            <MenuButton\n              className='btn'\n              onClick={undo}\n              disabled={!lists.past|| !cards.past}\n            >\n              <i className='fas fa-undo-alt mr-2'></i>\n              Undo last action\n            </MenuButton>\n\n            {Object.keys(lists.present).map((key, index) => {\n              const list = lists.present[key];\n              const listCards =\n                list.cards.length > 0\n                  ? list.cards\n                      .map(cardID => cards.present[cardID])\n                      .filter(card => card !== undefined)\n                  : [];\n              return (\n                <List\n                  key={list.id}\n                  id={list.id}\n                  title={list.title}\n                  cards={listCards}\n                  index={index}\n                />\n              );\n            })}\n            {provided.placeholder}\n\n            <AddList />\n          </ListContainer>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Board;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\n\nconst ArchivedContainer = styled.div`\n  position: absolute;\n  right: 0px;\n  top: 55px;\n  background-color: #ebecf0;\n  margin-right: 1em;\n  border-radius: 3px;\n  min-width: 272px;\n  padding: 14px 20px;\n  height: 90vh;\n  margin-right: 0;\n  min-width: 300px;\n  h2 {\n    text-decoration: underline;\n    text-align: center;\n  }\n`;\n\nconst ArchivedListContainer = styled.div`\n  overflow: scroll;\n  max-height: 30vh;\n`;\nconst ArchivedCardContainer = styled.div`\n  overflow: scroll;\n  max-height: 40vh;\n`;\n\nconst MenuButton = styled.button`\n  position: absolute;\n  color: white;\n  top: 55px;\n  right: 0px;\n  font-weight: bold;\n  margin-right: 1em;\n  background-color: hsla(0, 0%, 100%, 0.24);\n  &:hover {\n    color: white;\n  }\n`;\n\nexport default function Archived() {\n  const [showMenu, setShowMenu] = useState(false);\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n  const archived = useSelector(state => state.archived.present);\n\n  const showButton = () => {\n    return (\n      <MenuButton className='btn' onClick={toggleMenu}>\n        <i className='fas fa-ellipsis-h mr-2'></i>\n        Show Menu\n      </MenuButton>\n    );\n  };\n\n  const renderContainer = () => {\n    return (\n      <ArchivedContainer>\n        <h2>Menu</h2>\n        <span onClick={toggleMenu}>\n          &nbsp;\n          <i className='fas fa-times fa-lg' style={styles.icon}></i>\n        </span>\n\n        <h5 style={styles.title}>Archived Lists ({archived.lists.length})</h5>\n        <ArchivedListContainer\n          style={{ marginBottom: '2em', marginTop: '2em' }}\n        >\n          {archived.lists.map(list => {\n            return (\n              <Card key={`archived-${list.id}`} body style={styles.cardBody}>\n                {list.title}\n              </Card>\n            );\n          })}\n        </ArchivedListContainer>\n        <h5 style={styles.title}>Archived Cards ({archived.cards.length})</h5>\n\n        <ArchivedCardContainer\n          style={{ marginBottom: '2em', marginTop: '5em' }}\n        >\n          {archived.cards.map(card => {\n            return (\n              <Card key={`archived-${card.id}`} body style={styles.cardBody}>\n                {card.text}\n              </Card>\n            );\n          })}\n        </ArchivedCardContainer>\n      </ArchivedContainer>\n    );\n  };\n\n  return showMenu ? renderContainer() : showButton();\n}\n\nconst styles = {\n  icon: {\n    position: 'absolute',\n    top: '10px',\n    right: '10px',\n    cursor: 'pointer'\n  },\n  cardBody: {\n    padding: '5px',\n    marginBottom: '5px'\n  },\n\n  title: {\n    position: 'fixed',\n    backgroundColor: '#ebecf0'\n  }\n};\n","import { CONSTANTS } from '.';\n\nexport const filterCards = text => {\n  return {\n    type: CONSTANTS.FILTER_CARDS,\n    payload: { text }\n  };\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Board from './Board';\nimport Archived from './Archived';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { filterCards } from '../redux/actions/searchActions';\n\nconst style = {\n  navContainer: {\n    display: 'grid',\n    justifyContent: 'space-around',\n    background: 'rgba(0,0,0,.15)'\n  }\n};\n\n\nconst ClearSearh = styled.i`\n  right: 5px;\n  position: absolute;\n  top: 10px;\n  color: #6b778c;\n  cursor: pointer;\n  font-size: 1.2em;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n`;\n\nconst MainContainer = styled.div`\n  overflow: scroll;\n  height: 80vh;\n\n  h1 {\n    color: white;\n  }\n`;\n\nfunction App() {\n  const [searchText, setSearchText] = useState('');\n  const dispatch = useDispatch();\n\n  const handleKeyUp = ev => {\n    search();\n  };\n  const handleInputChange = ev => {\n    setSearchText(ev.target.value);\n  };\n  const search = () => {\n    dispatch(filterCards(searchText));\n  };\n  const clearSearh = () => {\n    setSearchText('');\n    dispatch(filterCards(''));\n  };\n\n  return (\n    <>\n      <Navbar style={style.navContainer}>\n        <Nav className='mr-auto'>\n          <SearchContainer>\n            <input\n              type='text'\n              value={searchText}\n              onKeyUp={handleKeyUp}\n              onChange={handleInputChange}\n              placeholder='Search text inside cards'\n              className='mr-sm-2  form-control'\n            />\n            {searchText.length > 0 ? (\n              <ClearSearh className='fas fa-times' onClick={clearSearh} />\n            ) : (\n              <> </>\n            )}\n          </SearchContainer>\n        </Nav>\n      </Navbar>\n\n      <MainContainer className='container-fluid mt-4'>\n        <h1>Trello Clone </h1>\n\n        <Board />\n        <Archived />\n      </MainContainer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CONSTANTS } from '../actions';\nimport { uuid } from 'uuidv4';\n\nconst initialState = {\n  past: [],\n  present: [\n    { id: '10', cards: [], title: 'To Do' },\n    { id: '11', cards: [], title: 'Doing' },\n    { id: '12', cards: [], title: 'Done' }\n  ],\n  future: []\n};\nlet lastAction;\n\nconst actionsThatNotAffectState = [CONSTANTS.EDIT_CARD];\n\nconst listReducer = (state = initialState, action) => {\n  if (\n    action.type !== CONSTANTS.UNDO_LAST_ACTION &&\n    action.type !== CONSTANTS.REDO_LAST_ACTION\n  ) {\n    lastAction = action.type;\n  }\n\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title } = action.payload;\n      const id = uuid();\n      const newList = {\n        title: title,\n        cards: [],\n        id\n      };\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: [...state.present, newList]\n      };\n      return newState;\n    }\n    case CONSTANTS.DUPLICATE_LIST: {\n      const { title, id, cards, newId } = action.payload;\n      const cardsIds = cards.map(card => card.id);\n\n      //get index of list to be copied\n      const index = state.present.map(list => list.id).indexOf(id);\n\n      const newList = {\n        title: `Copy of ${title}`,\n        cards: cardsIds,\n        id: newId\n      };\n      const newPresent = [...state.present];\n\n      newPresent.splice(index + 1, 0, newList);\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n    case CONSTANTS.EDIT_LIST: {\n      const { title, id } = action.payload;\n\n      const newPresent = state.present.map(list => {\n        if (list.id === id) {\n          return {\n            ...list,\n            title\n          };\n        } else {\n          return list;\n        }\n      });\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list: archivedList } = action.payload;\n\n      const newPresent = state.present.filter(\n        list => list.id !== archivedList.id\n      );\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n\n      const newPresent = state.present.map(list => {\n        if (list.id === listID) {\n          return {\n            ...list,\n            cards: [...list.cards, id]\n          };\n        } else {\n          return list;\n        }\n      });\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.DUPLICATE_CARD: {\n      const { card, oldId } = action.payload;\n\n      const newPresent = state.present.map(list => {\n        if (list.id === card.list) {\n          const index = list.cards.indexOf(oldId);\n          const newCards = [...list.cards];\n          newCards.splice(index + 1, 0, card.id);\n\n          return {\n            ...list,\n            cards: newCards\n          };\n        } else {\n          return list;\n        }\n      });\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const list = state.present.find(list => list.id === card.list);\n      let newCards = [...list.cards];\n\n      newCards = newCards.filter(cardID => cardID !== card.id);\n\n      const newPresent = state.present.map(list => {\n        if (list.id === card.list) {\n          return {\n            ...list,\n            cards: newCards\n          };\n        } else {\n          return list;\n        }\n      });\n\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.DRAGGED: {\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n        type\n      } = action.payload;\n\n      let newPresent;\n      if (type === 'list') {\n        newPresent = [...state.present];\n        const list = newPresent.splice(droppableIndexStart, 1);\n        newPresent.splice(droppableIndexEnd, 0, ...list);\n      } else {\n        //same container\n        if (droppableIdStart === droppableIdEnd) {\n          const startList = state.present.find(\n            list => droppableIdStart === list.id\n          );\n          const startListNewCards = [...startList.cards];\n          const card = startListNewCards.splice(droppableIndexStart, 1);\n          startListNewCards.splice(droppableIndexEnd, 0, ...card);\n\n          newPresent = state.present.map(list => {\n            if (list.id === startList.id) {\n              return {\n                ...startList,\n                cards: startListNewCards\n              };\n            } else {\n              return list;\n            }\n          });\n        } else {\n          const startList = state.present.find(\n            list => droppableIdStart === list.id\n          );\n          const endList = state.present.find(\n            list => droppableIdEnd === list.id\n          );\n\n          const startListNewCards = [...startList.cards];\n          const endListNewCards = [...endList.cards];\n\n          const card = startListNewCards.splice(droppableIndexStart, 1);\n          endListNewCards.splice(droppableIndexEnd, 0, ...card);\n\n          newPresent = state.present.map(list => {\n            if (list.id === startList.id) {\n              return {\n                ...startList,\n                cards: startListNewCards\n              };\n            } else if (list.id === endList.id) {\n              return {\n                ...endList,\n                cards: endListNewCards\n              };\n            } else {\n              return list;\n            }\n          });\n        }\n      }\n      const newState = {\n        ...state,\n        past: [...state.present],\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.UNDO_LAST_ACTION: {\n      console.log(\n        !actionsThatNotAffectState.includes(lastAction),\n        lastAction,\n        state.past.length\n      );\n      if (\n        state.past.length > 0 &&\n        !actionsThatNotAffectState.includes(lastAction)\n      ) {\n        console.log('UNDO LISTS');\n\n        const newState = {\n          past: [],\n          present: [...state.past],\n          future: [...state.present]\n        };\n        return newState;\n      }\n      return state;\n    }\n\n    case CONSTANTS.REDO_LAST_ACTION: {\n      if (\n        state.future.length > 0 &&\n        !actionsThatNotAffectState.includes(lastAction)\n      ) {\n        const newState = {\n          past: [...state.present],\n          present: [...state.future],\n          future: []\n        };\n        return newState;\n      }\n\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { CONSTANTS } from '../actions';\nimport { uuid } from 'uuidv4';\n\nconst initialState = {\n  past: {},\n  present: {},\n  future: {}\n};\nlet lastAction;\n\nconst actionsThatNotAffectState = [\n  CONSTANTS.DRAGGED,\n  CONSTANTS.ADD_LIST,\n  CONSTANTS.EDIT_LIST\n];\n\nconst cardReducer = (state = initialState, action) => {\n  if (\n    action.type !== CONSTANTS.UNDO_LAST_ACTION &&\n    action.type !== CONSTANTS.REDO_LAST_ACTION\n  ) {\n    lastAction = action.type;\n  }\n\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: id,\n        list: listID\n      };\n\n      return {\n        ...state,\n        past: { ...state.present },\n        present: { ...state.present, [id]: newCard }\n      };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = { ...state.present[id] };\n      card.text = newText;\n\n      return {\n        ...state,\n        past: { ...state.present },\n        present: { ...state.present, [id]: card }\n      };\n    }\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newPresent = { ...state.present };\n      delete newPresent[card.id];\n\n      const newState = {\n        ...state,\n        past: { ...state.present },\n        present: newPresent\n      };\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { cards } = action.payload;\n\n      const newPresent = { ...state.present };\n      cards.map(card => delete newPresent[card.id]);\n\n      const newState = {\n        ...state,\n        past: { ...state.present },\n        present: newPresent\n      };\n      return newState;\n    }\n    case CONSTANTS.DUPLICATE_CARD: {\n      const { card } = action.payload;\n\n      const newState = {\n        ...state,\n        past: { ...state.present },\n        present: { ...state.present, [card.id]: card }\n      };\n      return newState;\n    }\n\n    case CONSTANTS.DUPLICATE_LIST: {\n      const { cards, newId } = action.payload;\n      let newCards = [];\n      const newPresent = { ...state.present };\n\n      for (const card of cards) {\n        const newCard = { ...card };\n        newCard.id = uuid();\n        newCard.list = newId;\n        newPresent[newCard.id] = newCard;\n        newCards.push(newCard);\n      }\n\n      action.payload.cards = newCards;\n\n      const newState = {\n        ...state,\n        past: { ...state.present },\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.UNDO_LAST_ACTION: {\n      console.log(state.past);\n      if (state.past && !actionsThatNotAffectState.includes(lastAction)) {\n        return {\n          past: undefined,\n          present: { ...state.past },\n          future: { ...state.present }\n        };\n      }\n      return state;\n    }\n\n    case CONSTANTS.REDO_LAST_ACTION: {\n      if (state.future && !actionsThatNotAffectState.includes(lastAction)) {\n        return {\n          past: { ...state.present },\n          present: { ...state.future },\n          future: {}\n        };\n      }\n\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = {\n  past: {},\n  present: {\n    lists: [],\n    cards: []\n  },\n  future: {}\n};\n\nlet lastAction;\n\nconst actionsThatAffectState = [CONSTANTS.ARCHIVE_CARD, CONSTANTS.ARCHIVE_LIST];\n\nconst archiveReducer = (state = initialState, action) => {\n  if (\n    action.type !== CONSTANTS.UNDO_LAST_ACTION &&\n    action.type !== CONSTANTS.REDO_LAST_ACTION\n  ) {\n    lastAction = action.type;\n  }\n\n  switch (action.type) {\n    case CONSTANTS.ARCHIVE_CARD: {\n      const { card } = action.payload;\n\n      const newPresent = {\n        ...state.present,\n        cards: [...state.present.cards, card]\n      };\n      const newState = {\n        ...state,\n        past: { ...state.present },\n        present: newPresent\n      };\n      return newState;\n    }\n    case CONSTANTS.ARCHIVE_LIST: {\n      const { list, cards } = action.payload;\n\n      const newPresent = {\n        ...state.present,\n        cards: [...state.present.cards, ...cards],\n        lists: [...state.present.lists, { ...list }]\n      };\n      const newState = {\n        ...state,\n        past: { ...state.present },\n        present: newPresent\n      };\n      return newState;\n    }\n\n    case CONSTANTS.UNDO_LAST_ACTION: {\n      if (\n        state.past &&\n        actionsThatAffectState.includes(lastAction)\n      ) {\n        return {\n          past: {},\n          present: { ...state.past },\n          future: { ...state.present }\n        };\n      }\n      return state;\n    }\n\n    case CONSTANTS.REDO_LAST_ACTION: {\n      if (\n        state.future &&\n        actionsThatAffectState.includes(lastAction)\n      ) {\n        return {\n          past: { ...state.present },\n          present: { ...state.future },\n          future: {}\n        };\n      }\n\n      return state;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default archiveReducer;\n","import { CONSTANTS } from '../actions';\n\nconst initialState = '';\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.FILTER_CARDS: {\n      const { text } = action.payload;\n\n      const newState = text;\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from 'redux';\nimport listReducer from './listReducer';\nimport cardReducer from './cardReducer';\nimport archiveReducer from './archiveReducer';\nimport searchReducer from './searchReducer';\n\nconst rootReducer = combineReducers({\n  cards: cardReducer,\n  lists: listReducer,\n  archived: archiveReducer,\n  search: searchReducer\n});\n\nexport default rootReducer;\n","import { createStore, compose } from 'redux';\n\nimport rootReducer from './reducers';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'trello-clone',\n  storage\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function configureStore(initialState) {\n  let store = createStore(persistedReducer, initialState, composeEnhancers());\n  let persistor = persistStore(store);\n  return { store, persistor };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { persistor, store } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}